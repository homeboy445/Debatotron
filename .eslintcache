[{"D:\\ReactApps\\debatotron\\src\\index.js":"1","D:\\ReactApps\\debatotron\\src\\App.js":"2","D:\\ReactApps\\debatotron\\src\\serviceWorker.js":"3","D:\\ReactApps\\debatotron\\src\\Contexts\\AuthContext.js":"4","D:\\ReactApps\\debatotron\\src\\Components\\Menu\\MenuFiles.js":"5","D:\\ReactApps\\debatotron\\src\\Components\\Menu\\Navigation.js":"6","D:\\ReactApps\\debatotron\\src\\Components\\ProtectedRoute\\ProtectedRoute.js":"7","D:\\ReactApps\\debatotron\\src\\Components\\ProtectedRoute\\LoginRoute.js":"8","D:\\ReactApps\\debatotron\\src\\Components\\Register\\Register.js":"9","D:\\ReactApps\\debatotron\\src\\Components\\SignIn\\SignIn.js":"10","D:\\ReactApps\\debatotron\\src\\Components\\DebPage\\DebPage.js":"11","D:\\ReactApps\\debatotron\\src\\Components\\Home\\HomePage.js":"12","D:\\ReactApps\\debatotron\\src\\Components\\NewForm\\DraftForm.js":"13","D:\\ReactApps\\debatotron\\src\\Components\\ForgePassword\\ForgotPass.js":"14","D:\\ReactApps\\debatotron\\src\\Components\\profile\\Profile.js":"15","D:\\ReactApps\\debatotron\\src\\Components\\Inbox\\Inbox.js":"16","D:\\ReactApps\\debatotron\\src\\Components\\OngoingDebs\\OngoingDebs.js":"17","D:\\ReactApps\\debatotron\\src\\Components\\profile\\EditProfile.js":"18","D:\\ReactApps\\debatotron\\src\\Components\\NewForm\\DebateForm.js":"19","D:\\ReactApps\\debatotron\\src\\Components\\FriendsPage\\FriendsPage.js":"20","D:\\Project\\Debatotron\\src\\index.js":"21","D:\\Project\\Debatotron\\src\\App.js":"22","D:\\Project\\Debatotron\\src\\Contexts\\AuthContext.js":"23","D:\\Project\\Debatotron\\src\\Components\\Menu\\MenuFiles.js":"24","D:\\Project\\Debatotron\\src\\Components\\Menu\\Navigation.js":"25","D:\\Project\\Debatotron\\src\\Components\\Home\\HomePage.js":"26","D:\\Project\\Debatotron\\src\\Components\\ProtectedRoute\\LoginRoute.js":"27","D:\\Project\\Debatotron\\src\\Components\\ProtectedRoute\\ProtectedRoute.js":"28","D:\\Project\\Debatotron\\src\\Components\\SignIn\\SignIn.js":"29","D:\\Project\\Debatotron\\src\\Components\\Register\\Register.js":"30","D:\\Project\\Debatotron\\src\\Components\\FriendsPage\\FriendsPage.js":"31","D:\\Project\\Debatotron\\src\\Components\\ForgePassword\\ForgotPass.js":"32","D:\\Project\\Debatotron\\src\\Components\\OngoingDebs\\OngoingDebs.js":"33","D:\\Project\\Debatotron\\src\\Components\\NewForm\\DebateForm.js":"34","D:\\Project\\Debatotron\\src\\Components\\NewForm\\DraftForm.js":"35","D:\\Project\\Debatotron\\src\\Components\\Inbox\\Inbox.js":"36","D:\\Project\\Debatotron\\src\\Components\\profile\\Profile.js":"37","D:\\Project\\Debatotron\\src\\Components\\profile\\EditProfile.js":"38","D:\\Project\\Debatotron\\src\\Components\\DebPage\\DebatePage.js":"39","D:\\Project\\Debatotron\\src\\Components\\Profile\\Profile.js":"40","D:\\Project\\Debatotron\\src\\Components\\DebPage\\Participants.js":"41","D:\\Project\\Debatotron\\src\\Components\\DebPage\\ReportUser.js":"42","D:\\Project\\Debatotron\\src\\Components\\DebPage\\DebDescription.js":"43","D:\\Project\\Debatotron\\src\\Components\\Profile\\EditProfile.js":"44","D:\\Project\\Debatotron\\src\\Components\\Sub_Components\\InputBox\\InputBox.js":"45","D:\\Project\\Debatotron\\src\\Components\\DebPage\\JoinDebate.js":"46","D:\\Project\\Debatotron\\src\\Components\\Home\\UserFeed.js":"47"},{"size":505,"mtime":1597762925362,"results":"48","hashOfConfig":"49"},{"size":1390,"mtime":1628943068091,"results":"50","hashOfConfig":"49"},{"size":5086,"mtime":499162500000,"results":"51","hashOfConfig":"49"},{"size":97,"mtime":1598885596063,"results":"52","hashOfConfig":"49"},{"size":4921,"mtime":1628942821782,"results":"53","hashOfConfig":"49"},{"size":2256,"mtime":1604229771492,"results":"54","hashOfConfig":"49"},{"size":575,"mtime":1628942799968,"results":"55","hashOfConfig":"49"},{"size":312,"mtime":1599056984644,"results":"56","hashOfConfig":"49"},{"size":3929,"mtime":1599058686118,"results":"57","hashOfConfig":"49"},{"size":2337,"mtime":1619264572596,"results":"58","hashOfConfig":"49"},{"size":9556,"mtime":1624190591773,"results":"59","hashOfConfig":"49"},{"size":2458,"mtime":1608387918158,"results":"60","hashOfConfig":"49"},{"size":2586,"mtime":1601457924772,"results":"61","hashOfConfig":"49"},{"size":6286,"mtime":1599061708621,"results":"62","hashOfConfig":"49"},{"size":6686,"mtime":1628943882688,"results":"63","hashOfConfig":"49"},{"size":5931,"mtime":1628941087215,"results":"64","hashOfConfig":"49"},{"size":8424,"mtime":1624187350250,"results":"65","hashOfConfig":"49"},{"size":2902,"mtime":1624179434517,"results":"66","hashOfConfig":"49"},{"size":3129,"mtime":1624188453450,"results":"67","hashOfConfig":"49"},{"size":3693,"mtime":1628343949575,"results":"68","hashOfConfig":"49"},{"size":221,"mtime":1633001275115,"results":"69","hashOfConfig":"70"},{"size":1687,"mtime":1633697222652,"results":"71","hashOfConfig":"70"},{"size":97,"mtime":1598885596063,"results":"72","hashOfConfig":"70"},{"size":4960,"mtime":1634397576860,"results":"73","hashOfConfig":"70"},{"size":2435,"mtime":1630854323108,"results":"74","hashOfConfig":"70"},{"size":3778,"mtime":1634397576856,"results":"75","hashOfConfig":"70"},{"size":414,"mtime":1632158611100,"results":"76","hashOfConfig":"70"},{"size":604,"mtime":1633688925350,"results":"77","hashOfConfig":"70"},{"size":2411,"mtime":1630849550732,"results":"78","hashOfConfig":"70"},{"size":4188,"mtime":1633009478030,"results":"79","hashOfConfig":"70"},{"size":3693,"mtime":1628343949575,"results":"80","hashOfConfig":"70"},{"size":5846,"mtime":1633009320002,"results":"81","hashOfConfig":"70"},{"size":3189,"mtime":1634397673222,"results":"82","hashOfConfig":"70"},{"size":3956,"mtime":1634397576865,"results":"83","hashOfConfig":"70"},{"size":2586,"mtime":1601457924772,"results":"84","hashOfConfig":"70"},{"size":8923,"mtime":1634397576858,"results":"85","hashOfConfig":"70"},{"size":6686,"mtime":1628943882688,"results":"86","hashOfConfig":"70"},{"size":2902,"mtime":1624179434517,"results":"87","hashOfConfig":"70"},{"size":16913,"mtime":1634397576845,"results":"88","hashOfConfig":"70"},{"size":6677,"mtime":1633013788210,"results":"89","hashOfConfig":"70"},{"size":2862,"mtime":1634397576851,"results":"90","hashOfConfig":"70"},{"size":1664,"mtime":1633873703040,"results":"91","hashOfConfig":"70"},{"size":370,"mtime":1633776663425,"results":"92","hashOfConfig":"70"},{"size":2902,"mtime":1624179434517,"results":"93","hashOfConfig":"70"},{"size":843,"mtime":1630842981311,"results":"94","hashOfConfig":"70"},{"size":1574,"mtime":1634397576849,"results":"95","hashOfConfig":"70"},{"size":9374,"mtime":1634396871469,"results":"96","hashOfConfig":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"1om1qai",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"99"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"99"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"184yo6g",{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"151"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"151"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"151"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"151"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"151"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"151"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"188"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"151"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"151"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"151"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"D:\\ReactApps\\debatotron\\src\\index.js",[],["211","212"],"D:\\ReactApps\\debatotron\\src\\App.js",[],"D:\\ReactApps\\debatotron\\src\\serviceWorker.js",[],"D:\\ReactApps\\debatotron\\src\\Contexts\\AuthContext.js",[],"D:\\ReactApps\\debatotron\\src\\Components\\Menu\\MenuFiles.js",[],"D:\\ReactApps\\debatotron\\src\\Components\\Menu\\Navigation.js",["213","214","215","216"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../../Contexts/AuthContext';\r\nimport {animated,useSpring} from 'react-spring';\r\n\r\nconst Navigation=()=>{\r\n    const [on,turn]=useState(true);\r\n    const [user,change_user]=useState('random');\r\n    const Auth=useContext(AuthContext);\r\n    const ToggleIt=()=>{\r\n        turn(!on);\r\n    }\r\n    const {x1,x2,x3,x4,x5,evt}=useSpring({\r\n        x1:on?[0,0,0]:[-45,-9,6],\r\n        x2:on?1:0,\r\n        x3:on?[0,0,0]:[45,-8,-15],\r\n        x4:on?[100,0,0]:[0,1,0],\r\n        evt:on?\"none\":\"all\"\r\n    })\r\n    return (\r\n        <div>\r\n        <div class=\"Ham-menu\" onClick={ToggleIt}>\r\n            <animated.div class=\"bar1\"\r\n            style={{\r\n                transform:x1.interpolate((x,y,z)=>`translate(${y}px,${z}px) rotate(${x}deg)`),\r\n            }}></animated.div>\r\n            <animated.div class=\"bar2\"\r\n            style={{\r\n                opacity:x2.interpolate(x=>x)\r\n            }}></animated.div>\r\n            <animated.div class=\"bar3\"\r\n            style={{\r\n                transform:x3.interpolate((x,y,z)=>`translate(${y}px,${z}px) rotate(${x}deg)`)\r\n            }}></animated.div>\r\n        </div>\r\n        <animated.nav className=\"nav-menu\" style={{\r\n            transform:x4.interpolate((x,y,z)=>`translate(${x}%,${z}%)`),\r\n            opacity:x4.interpolate((x,y,z)=>y),\r\n            pointerEvents:evt.interpolate(str=>str)\r\n        }}>\r\n            <ul>\r\n            <Link to=\"/\">\r\n                <li onClick={ToggleIt}>Home</li>\r\n            </Link>\r\n            <Link to=\"/new\">\r\n                <li onClick={ToggleIt}>New Deb</li>\r\n            </Link>\r\n            <Link to=\"/OngoingDebs\">\r\n                <li onClick={ToggleIt}>OnGoing Debs</li>\r\n            </Link>\r\n            <Link to=\"/Inbox\">\r\n                <li onClick={ToggleIt}>Inbox</li>\r\n            </Link>\r\n            <Link to={`/Profile/${Auth.userInfo[0].name}`}>\r\n                <li onClick={ToggleIt}>Profile</li>\r\n            </Link>\r\n            <Link to=\"/signout\">\r\n                <li onClick={ToggleIt}>Sign-Out</li>\r\n            </Link>\r\n            </ul>\r\n        </animated.nav>\r\n    </div>\r\n    )\r\n}\r\nexport default Navigation;\r\n","D:\\ReactApps\\debatotron\\src\\Components\\ProtectedRoute\\ProtectedRoute.js",[],"D:\\ReactApps\\debatotron\\src\\Components\\ProtectedRoute\\LoginRoute.js",[],"D:\\ReactApps\\debatotron\\src\\Components\\Register\\Register.js",["217","218"],"import React,{useState,useRef} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Register.css';\r\nconst Register = ({ HandleAuth,Change_Display }) => {\r\n    const [name,ChangeName]=useState('');\r\n    const [email_1,ChangeEmail]=useState('');\r\n    const [password_1,ChangePassword]=useState('');\r\n    const [answer_1,ChangeAns]=useState('');\r\n    const [state,set]=useState('Enter your Credentials!');\r\n    const recovery_1=useRef(null);\r\n\r\n    const HandleChange_1=(event)=>{\r\n        if(event.target.value.trim())\r\n        {ChangeName(event.target.value);}\r\n        else{ChangeName('')}\r\n    }\r\n    const HandleChange_2=(event)=>{\r\n        if(event.target.value.trim()){\r\n        ChangeEmail(event.target.value);}\r\n        else{ChangeEmail('')}\r\n    }\r\n    const HandleChange_3=(event)=>{\r\n        if(event.target.value.trim()){\r\n        ChangePassword(event.target.value);}        \r\n        else{ChangePassword('')}\r\n    }\r\n    const HandleChange_4=(event)=>{\r\n        if(event.target.value.trim()){\r\n        ChangeAns(event.target.value);}\r\n        else{ChangeAns('')}\r\n    }\r\n    const HandleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        fetch('http://localhost:3005/register',{\r\n        method:'post',\r\n        headers:{'Content-Type':'application/json'},\r\n        body:JSON.stringify({\r\n            user:name,\r\n            password:password_1,\r\n            email:email_1,\r\n            recovery:recovery_1.current.value,\r\n            answer:answer_1\r\n        })})\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            if(response[0].name)\r\n            { \r\n                window.location.href=\"/signin\";\r\n            }\r\n            else\r\n            {\r\n                throw 'Error!';\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            set(\"Something's Wrong,Try again!\");\r\n            setTimeout(()=>{\r\n                set('Enter your Credentials!')\r\n            },3000);\r\n        });\r\n        ChangeAns('');\r\n        ChangeEmail('');\r\n        ChangeName('');\r\n        ChangePassword('');\r\n    }\r\n    return (\r\n        <div className=\"wrap-backg-reg\">\r\n        <div className=\"wrapper-reg\">\r\n            <h1>Register</h1>\r\n            <form onSubmit={HandleSubmit}>\r\n                <input type=\"text\" placeholder=\"UserName\"  \r\n                onChange={HandleChange_1}\r\n                value={name}\r\n                required/>\r\n                <input type=\"text\" placeholder=\"Email\" \r\n                onChange={HandleChange_2}\r\n                value={email_1}\r\n                required/>\r\n                <input type=\"password\" className=\"psw\"\r\n                placeholder=\"Password\"\r\n                value={password_1} \r\n                onChange={HandleChange_3}\r\n                required/>\r\n                <h2>Please Choose from below questions!</h2>\r\n                <select ref={recovery_1}>\r\n                    <option>choose your recovery question</option>\r\n                    <option value=\"What is you pet's name?\">What is you pet's name?</option>\r\n                    <option value=\"What is favourite game?\">What is favourite game?</option>\r\n                    <option value=\"What is your favourite dish?\">What is your favourite dish?</option>\r\n                    <option value=\"What is your hobby?\">What is your hobby?</option>\r\n                </select>\r\n                <input type=\"text\" value={answer_1} placeholder=\"Enter your Answer!\" \r\n                className=\"ans\" \r\n                onChange={HandleChange_4}\r\n                required/>\r\n                <p className=\"stat\">{state}</p>\r\n                <div className=\"g\">\r\n                <input type=\"submit\" value=\"Register\"/>\r\n                <p>Or</p>\r\n                <a href=\"/signin\" className=\"sngg\" onClick={()=>Change_Display('SignIn')}>Sign-In</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","D:\\ReactApps\\debatotron\\src\\Components\\SignIn\\SignIn.js",[],"D:\\ReactApps\\debatotron\\src\\Components\\DebPage\\DebPage.js",["219"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Debpage.css\";\r\nimport heart from \"../../Images/favourite.png\";\r\nimport Robot from \"../../Assets/Robot.png\";\r\nimport Cookie from \"js-cookie\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport socketIo from \"socket.io-client\";\r\n\r\nclass DebPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Access: true,\r\n      requested: false,\r\n      toggle: false,\r\n      topic: \"Start a Debate on the new Page!\",\r\n      overview: \"\",\r\n      comments: [\"Be the First to comment!\"],\r\n      typed_com: \"\",\r\n      id: this.props.match.params.id,\r\n      failedConnecting: false,\r\n      toggle_comment: false,\r\n      user: \"guest\",\r\n      likes: 0,\r\n      liked: false,\r\n    };\r\n    this.socket = React.createRef();\r\n  }\r\n  ToggleIt = () => {\r\n    var tog = this.state.toggle;\r\n    this.setState({\r\n      toggle: !tog,\r\n    });\r\n  };\r\n  HandleInputChange = (event) => {\r\n    this.setState({\r\n      typed_com: event.target.value,\r\n    });\r\n  };\r\n  UpdateComments = (event) => {\r\n    this.socket.current.emit(\"test\", \"test it\");\r\n    event.preventDefault();\r\n    var id = this.state.id;\r\n    var obj = this.state.comments;\r\n    if (this.state.typed_com.trim() !== \"\") {\r\n      obj.push({\r\n        comment: this.state.typed_com,\r\n        byuser: this.props.userInfo[0].name,\r\n      });\r\n      this.setState({\r\n        comments: obj,\r\n        typed_com: \"\",\r\n      });\r\n      var com_obj = {\r\n        comment: this.state.typed_com,\r\n        room: id,\r\n        byuser: this.props.userInfo[0].name,\r\n      };\r\n      console.log(com_obj);\r\n      this.socket.current.emit(\"make-comment\", com_obj);\r\n    }\r\n  };\r\n  Comment_Toggle = (state) => {\r\n    this.setState({\r\n      toggle_comment: !state,\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    this.socket.current = socketIo.connect(\"http://localhost:3005\");\r\n    this.socket.current.emit(\"test\", \"TESTING...\");\r\n    const id = this.state.id;\r\n    this.socket.current.on(\"recieve\", (data) => {\r\n      console.log(data);\r\n      this.socket.current.emit(\"live\", id);\r\n    });\r\n    axios\r\n      .get(`http://localhost:3005/getdebdata/${id}`)\r\n      .then((response) => {\r\n        if (response.data[0].access !== \"public\") {\r\n          axios\r\n            .get(\r\n              `http://localhost:3005/CheckAccess/${id}/${Cookie.get(\r\n                \"username\"\r\n              )}`\r\n            )\r\n            .then((response) => {\r\n              if (response.data) {\r\n                return;\r\n              }\r\n              throw false;\r\n            })\r\n            .catch((err) => {\r\n              return this.setState({\r\n                Access: false,\r\n              });\r\n            });\r\n        }\r\n        this.setState({\r\n          topic: response.data[0].topic,\r\n          overview: response.data[0].overview,\r\n        });\r\n        axios\r\n          .get(`http://localhost:3005/getcomments/${id}`)\r\n          .then((response) => {\r\n            this.setState({\r\n              comments: response.data,\r\n              failedConnecting: false,\r\n            });\r\n            axios\r\n              .get(`http://localhost:3005/getlikes/${id}`)\r\n              .then((response) => {\r\n                if (!response) {\r\n                  return;\r\n                }\r\n                this.setState({\r\n                  likes: parseInt(response.data[0].count),\r\n                });\r\n                axios\r\n                  .get(\r\n                    `http://localhost:3005/IsLiked/${id}/${this.props.userInfo[0].name}`\r\n                  )\r\n                  .then((response) => {\r\n                    if (!response) {\r\n                      return;\r\n                    }\r\n                    if (response.data[0].users) {\r\n                      this.setState({\r\n                        liked: true,\r\n                      });\r\n                    }\r\n                  })\r\n                  .catch((err) => {\r\n                    this.setState({\r\n                      liked: false,\r\n                    });\r\n                  });\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            this.setState({\r\n              comments: [\"Failed to load comments!\"],\r\n              failedConnecting: true,\r\n            });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          user: \"guest\",\r\n        });\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    if (!this.state.access) {\r\n      if (!this.state.requested) {\r\n        axios\r\n          .get(\r\n            `http://localhost:3005/IsRoomRequested/${\r\n              this.state.id + \":\" + this.props.userInfo[0].name\r\n            }`\r\n          )\r\n          .then((response) => {\r\n            if (response.data) {\r\n              this.setState({\r\n                requested: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            return;\r\n          });\r\n      } else {\r\n        this.props.ToggleDisplay({\r\n          text: \"You've already requested this room!\",\r\n          status: true,\r\n        });\r\n      }\r\n    }\r\n    this.socket.current.on(\"comment\", (data) => {\r\n      var obj = this.state.comments;\r\n      obj.push(data);\r\n      this.setState({\r\n        comments: obj,\r\n      });\r\n    });\r\n  }\r\n\r\n  HandleLike = () => {\r\n    if (this.state.failedConnecting) {\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"http://localhost:3005/UpdateLikes\", {\r\n        id: this.state.id,\r\n        user: this.props.userInfo[0].name,\r\n        flag: this.state.liked ? 0 : 1,\r\n      })\r\n      .then((response) => {\r\n        if (!response) {\r\n          return;\r\n        }\r\n        console.log(response);\r\n        this.setState({\r\n          liked: !this.state.liked,\r\n          likes: this.state.likes + (this.state.liked ? -1 : 1),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  HandleRoomRequest = () => {\r\n    this.props.ToggleDisplay({\r\n      text: \"Room has been requested!\",\r\n      status: true,\r\n    });\r\n    axios\r\n      .get(\r\n        `http://localhost:3005/MakeDebRequest/${\r\n          this.state.id + \":\" + this.props.userInfo[0].name\r\n        }`\r\n      )\r\n      .then((response) => {\r\n        this.setState({\r\n          requested: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.props.ToggleDisplay({\r\n          text: \"Some error has occured! Try again!\",\r\n          status: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return this.state.Access ? (\r\n      <div className=\"container\">\r\n        <div\r\n          style={{\r\n            background: this.state.liked ? \"white\" : \"black\",\r\n            width: \"10%\",\r\n            borderRadius: \"5px\",\r\n            padding: \"0.1%\",\r\n            fontSize: \"2rem\",\r\n            display: \"flex\",\r\n            transition: \"0.4s ease\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            color: this.state.liked ? \"black\" : \"white\",\r\n          }}\r\n        >\r\n          <img\r\n            src={heart}\r\n            className=\"hrtimg\"\r\n            style={{ width: \"50%\", height: \"10%\" }}\r\n            onClick={this.HandleLike}\r\n            alt=\"&\"\r\n          />\r\n          :{this.state.likes}\r\n        </div>\r\n        <h1 className=\"hdr\">{this.state.topic}</h1>\r\n        <button id=\"butn\" onClick={this.ToggleIt}>\r\n          Overview<span>+</span>\r\n        </button>\r\n        <div\r\n          id=\"prg\"\r\n          style={{ visibility: this.state.toggle ? \"visible\" : \"hidden\" }}\r\n        >\r\n          <p>{this.state.overview}</p>\r\n        </div>\r\n        <form onSubmit={this.UpdateComments} className=\"frm1\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"comment\"\r\n            onChange={this.HandleInputChange}\r\n            className=\"inpp\"\r\n            value={this.state.typed_com}\r\n            disabled={this.state.failedConnecting}\r\n          />\r\n        </form>\r\n        <div className=\"comments\" ref=\"cmtsection\">\r\n          {!this.state.failedConnecting ? (\r\n            this.state.comments[0] !== null ? (\r\n              this.state.comments.map((item) => {\r\n                return (\r\n                  <div className=\"cmt_flx\">\r\n                    <p className=\"cmts\">\r\n                      <a\r\n                        href={\r\n                          item.byuser !== \"guest\"\r\n                            ? `/Profile/${item.byuser}`\r\n                            : \"\"\r\n                        }\r\n                        className=\"usr\"\r\n                      >\r\n                        {item.byuser}\r\n                      </a>\r\n                      <p className=\"cmt\">{item.comment}</p>\r\n                    </p>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <p>Be the First to Comment!</p>\r\n            )\r\n          ) : (\r\n            <h1>404 error has occured!</h1>\r\n          )}\r\n          {/* {item.byuser!==null?<p>@</p>:<p></p>} */}\r\n        </div>\r\n        <a href=\"/OngoingDebs\">Back to Debates Page!</a>\r\n      </div>\r\n    ) : (\r\n      <div className=\"private\">\r\n        <img src={Robot} alt=\"\" />\r\n        <div>\r\n          <h1>Oops! Looks like you don't have access to this debate.</h1>\r\n          {!this.state.requested ? (\r\n            <button onClick={this.HandleRoomRequest}>Request Access</button>\r\n          ) : (\r\n            <h2>You've already requested this room!</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(DebPage);\r\n","D:\\ReactApps\\debatotron\\src\\Components\\Home\\HomePage.js",["220","221","222","223"],"import React,{useState,useEffect,useRef} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {animated,useSpring} from 'react-spring';\r\nimport {Link} from 'react-scroll';\r\nimport arrow from '../../Images/arrow.png';\r\nimport './HomePage.css';\r\nimport Register from './../Register/Register';\r\nconst LandingPage = ({auth}) => {\r\n    const [bit,toggle]=useState(false);\r\n    const [hdr,toggleit]=useState(false);\r\n    const props=useSpring({opacity:bit?1:0,transform:`translate(0%,${bit?0:30}%)`});\r\n    const prop1=useSpring({opacity:hdr?1:0,transform:`scale(${hdr?1.5:1})`});\r\n    useEffect(()=>{\r\n        toggle(true);\r\n        setTimeout(()=>{\r\n            toggleit(true);\r\n        },1900);\r\n    },[]);\r\n    return (\r\n        <div className=\"center_page\">\r\n            {!auth?<div id=\"Welcome_text\">\r\n                <a className=\"butn4\" href=\"/signin\">SignIn</a>\r\n                <a className=\"butn5\" href=\"/register\">Register</a>\r\n            </div>:null}\r\n            <animated.h1 className=\"Welcome_text\" style={props}>Welcome Home,<br/>to the \r\n            <animated.span className=\"mn_hd\" style={prop1}>Debatotron</animated.span></animated.h1>\r\n            <Link to=\"Info_Page\" smooth={true} duration={1000}><img src={arrow} className=\"arrow\" style={{visibility:auth?\"hidden\":\"visible\",pointerEvents:auth?\"none\":\"all\"}}/></Link>\r\n            {!auth?<div className=\"Info_Page\" id=\"Info_Page\">\r\n                <h1 className=\"info_hdr\">Where have you gotten yourself?</h1>\r\n                <p className=\"info_text\">Well,You must've been to places but this ain't like no where you've ever been to!\r\n                    Welcome to the Kingdom of Awesomness, okay so listen you'll find a hell lotta \r\n                    young padawans like you here,Here-You debate,you make friends and most importantly\r\n                    you become a better version of yourself. Well 'Nuff said!\r\n                    Let's Roll!\r\n                    <br/>(um.. Please Register If you're an untrained Jedi or Signin if you're a Master already)\r\n                </p>\r\n                <Link className=\"butn3\" to=\"Welcome_text\" smooth={true} duration={1000}>Lets Go!</Link>\r\n            </div>:\r\n            <div className=\"btns-page\">\r\n                <a className=\"butn1\" href=\"/new\">New</a>\r\n                <a className=\"butn2\" href=\"/OngoingDebs\">Contribute</a>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage;\r\n","D:\\ReactApps\\debatotron\\src\\Components\\NewForm\\DraftForm.js",["224"],"import React,{useState,useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './DebForm.css';\r\nconst DebateForm = ({userInfo}) => {\r\n\r\n    const [title,Altertitle]=useState('');\r\n    const [Description,AlterDesc]=useState('');\r\n    const { id }=useParams();\r\n    \r\n    useEffect(()=>{\r\n        console.log('ran')\r\n        fetch(`http://localhost:3005/getdebdata/${id}`)\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            Altertitle(response[0].topic)\r\n            AlterDesc(response[0].overview)\r\n        })\r\n        .catch(err=>{\r\n            Altertitle(\"\")\r\n            AlterDesc(\"\")\r\n        })\r\n    },[])\r\n\r\n    const HandleTitle=(evt)=>{\r\n        Altertitle(evt.target.value);\r\n    }\r\n\r\n    const HandleDescription=(evt)=>{\r\n        AlterDesc(evt.target.value);\r\n    }\r\n\r\n    const SendData=(recieved_flag)=>{\r\n        console.log(id);\r\n        if(id&&title&&Description&&recieved_flag)\r\n        {\r\n        fetch(`http://localhost:3005/deletedeb/${id}`)\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            fetch('http://localhost:3005/save',{\r\n                method:'post',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                uniqid:id,\r\n                title:title,\r\n                overview:Description,\r\n                publishedat:new Date().toLocaleDateString(),\r\n                publisher:userInfo[0].name,\r\n                flag:recieved_flag\r\n            })\r\n        })\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n                console.log(response)\r\n                window.location.href=`/DebPage/${id}`;\r\n            })\r\n            .catch(err=>{\r\n                window.location.href='/';\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log('An error has occured!')\r\n        })}\r\n    }\r\n    return (\r\n        <div className=\"form1\">\r\n        <h1 className=\"hh\">Start a New Debate!</h1>\r\n            <form>\r\n                <h2 className=\"tp\">Specify the topic!</h2>\r\n                <input type=\"text\" className=\"inp\" onChange={HandleTitle} value={title}/>\r\n                <h2 className=\"dsp\">Now,Give Some of your views about it!</h2>\r\n                <textarea className=\"txt\" onChange={HandleDescription}>{Description}</textarea>\r\n                <div className=\"btnn\">\r\n                    <button onClick={()=>SendData('saved')} className=\"sv\">Save</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default DebateForm;\r\n","D:\\ReactApps\\debatotron\\src\\Components\\ForgePassword\\ForgotPass.js",["225","226","227","228","229","230"],"import React,{useState} from 'react';\r\nimport './ForgotPass.css';\r\nconst ForgotPass = () => {\r\n    const [email,setEmail]=useState('');\r\n    const [answer,setAnswer]=useState('')\r\n    const [state,setstate]=useState('Email');\r\n    const [recovery_q,set_rec]=useState(\"You're question will appear here!\");\r\n    const [password_1,setPass_1]=useState('');\r\n    const [password_2,setPass_2]=useState('');\r\n    const [Auth_state,setAuth_state]=useState(\"We'll Identify your email & your recovery question will prompt!\");\r\n    const HandleEmailChange=(event)=>{\r\n        if(event.target.value.trim())\r\n        {\r\n            setEmail(event.target.value);\r\n        }\r\n        else\r\n        {\r\n            setEmail('');\r\n        }\r\n    }\r\n    const HandleAnswerChange=(e)=>{\r\n        if(e.target.value.trim())\r\n        {\r\n            setAnswer(e.target.value);\r\n        }\r\n        else\r\n        {\r\n            setAnswer('');\r\n        }\r\n    }\r\n    const HandlePasswordChange=(e)=>{\r\n        if(e.target.value.trim())\r\n        {\r\n            setPass_1(e.target.value);\r\n        }\r\n        else\r\n        {\r\n            setPass_1('');\r\n        }\r\n    }\r\n    const HandlePasswordChange_1=(e)=>{\r\n        if(e.target.value.trim())\r\n        {\r\n            setPass_2(e.target.value);\r\n        }\r\n        else\r\n        {\r\n            setPass_2('');\r\n        }\r\n    }\r\n    const HandleSubmit_1=(e)=>{\r\n        e.preventDefault();\r\n        fetch('http://localhost:3005/ForgotPassword',{\r\n        method:'post',\r\n        headers:{'Content-Type':'application/json'},\r\n        body:JSON.stringify({\r\n            email:email\r\n        })})\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            if(response[0].recovery)\r\n            {\r\n                setstate('recover');\r\n                setAuth_state('Make sure you enter the right answer!');\r\n                return set_rec(response[0].recovery);\r\n            }\r\n            else\r\n            {\r\n                setAuth_state(\"Email Not found!\");\r\n                setTimeout(()=>{\r\n                    setAuth_state(\"We'll Identify your email & your recovery question will prompt!\");\r\n                },4000);\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            setstate('Email');\r\n            setAuth_state('Email not found!');\r\n            setTimeout(() => {\r\n                setAuth_state(\"We'll Identify your email & your recovery question will prompt!\")\r\n            }, 4000);\r\n            set_rec(\"You're question will appear here!\")\r\n        })\r\n    }\r\n    const HandleSubmit_2=(e)=>{\r\n        e.preventDefault();\r\n        fetch('http://localhost:3005/CheckRecovery',{\r\n        method:'post',\r\n        headers:{'Content-Type':'application/json'},\r\n        body:JSON.stringify({\r\n            email:email,\r\n            answer:answer\r\n        })})\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            if(response=='Found!')\r\n            {\r\n                setstate('Change');\r\n                setAuth_state(\"Make sure the two Fields Matches!\");\r\n            }\r\n            else\r\n            {\r\n                setAuth_state('Wrong Answer!');\r\n                setTimeout(()=>{\r\n                    setAuth_state(\"Make sure you enter the right answer!\");\r\n                });\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            setAuth_state(\"An Error has occured!\");\r\n            setTimeout(()=>{\r\n                setAuth_state(\"Make sure you enter the right answer!\");\r\n            },4000);\r\n        });\r\n    }\r\n    const HandleSubmit_3=(e)=>{\r\n        e.preventDefault();\r\n        if(password_1==password_2)\r\n        {\r\n            fetch('http://localhost:3005/ChangePassword',{\r\n            method:'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                email:email,\r\n                password:password_1\r\n            })})\r\n            .then(response=>response.json())\r\n            .then(response=>{\r\n                if(response==\"Successfull!\")\r\n                { window.location.href=\"/signin\";}\r\n                else{\r\n                    throw \"Error!\";\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                setAuth_state(\"An error has occured!\");\r\n                setTimeout(()=>{\r\n                    setAuth_state('Make sure the two Fields Matches!');\r\n                },4000);\r\n            })\r\n        }\r\n        else\r\n        {\r\n            setAuth_state('Passwords are not matching!');\r\n            setTimeout(()=>{\r\n                setAuth_state('Make sure the two Fields Matches!');\r\n            },4000);\r\n        }\r\n    }\r\n    return state=='Email'?(\r\n        <div className=\"wrp-forp\">\r\n            <form className=\"wrapper_2\" onSubmit={HandleSubmit_1}>\r\n                <h2>Enter your Email Id to Retrieve your password!</h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Email\"\r\n                onChange={HandleEmailChange}\r\n                value={email}/>\r\n                <p className=\"AuthS\">{Auth_state}</p>\r\n                <button className=\"btn4\">Submit</button>\r\n            </form>\r\n        </div>\r\n    ):state=='recover'?(\r\n        <div className=\"wrp-forp\">\r\n            <form className=\"wrapper_2\" onSubmit={HandleSubmit_2}>\r\n                <h2>{recovery_q}</h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Answer\"\r\n                onChange={HandleAnswerChange}\r\n                value={answer}/>\r\n                <p className=\"AuthS\">{Auth_state}</p>\r\n                <button className=\"btn4\">Submit</button>\r\n            </form>\r\n        </div>\r\n    ):(\r\n        <div className=\"wrp-forp\">\r\n            <form className=\"wrapper_2\" onSubmit={HandleSubmit_3}>\r\n                <input type=\"password\" \r\n                placeholder=\"New password\"\r\n                onChange={HandlePasswordChange}\r\n                value={password_1}/>\r\n                <input type=\"password\" \r\n                placeholder=\"Enter again!\"\r\n                onChange={HandlePasswordChange_1}\r\n                value={password_2}/>                \r\n                <p className=\"AuthS\">{Auth_state}</p>\r\n                <button className=\"btn4\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPass;","D:\\ReactApps\\debatotron\\src\\Components\\profile\\Profile.js",[],"D:\\ReactApps\\debatotron\\src\\Components\\Inbox\\Inbox.js",["231","232","233","234"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../../Contexts/AuthContext\";\r\nimport \"./Inbox.css\";\r\n\r\nconst Inbox = ({ userInfo }) => {\r\n  const [messages, updMes] = useState([\r\n    {\r\n      message: \"You're Messages will appear here!\",\r\n      recievedat: \"\",\r\n      additional: { title: \"Message Title\" },\r\n    },\r\n  ]);\r\n  const [NotRecieved, change_this] = useState(true);\r\n  const [toggle, toggler] = useState(false);\r\n  const [ActiveIndex, ChangeActiveIndex] = useState(0);\r\n  const Auth = useContext(AuthContext);\r\n  const HandleToggle = () => {\r\n    toggler(!toggle);\r\n  };\r\n\r\n  const Delete_Data = () => {\r\n    HandleToggle();\r\n    fetch(`http://localhost:3005/WipeInbox/${Auth.userInfo[0].name}`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        window.location.href = \"/Inbox\";\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  const Htmlify = (text) => {\r\n    return `<h2>${text}</h2>`;\r\n  };\r\n\r\n  const returnMessageTitle = (type) => {\r\n    switch (type) {\r\n      case -1:\r\n        return \"Welcome, user to the debatotron...\";\r\n      case 0:\r\n        return \"A user needs Access to one of your Debates.\";\r\n      case 1:\r\n        return \"A New Friend Request!\";\r\n      case 2:\r\n        return \"Access Granted!\";\r\n      case 3:\r\n        return \"You've gotta new friend!\";\r\n      default:\r\n        return \"Test Message\";\r\n    }\r\n  };\r\n\r\n  const ExecuteResponse = (data, messageid, status) => {\r\n    const del = (messageid) => { //For deleting any message via its uuid.\r\n      axios\r\n        .post(\"http://localhost:3005/removeMessage\", {\r\n          mId: messageid,\r\n        })\r\n        .then((response) => {\r\n          window.location.reload();\r\n        })\r\n        .catch((err) => {\r\n          return;\r\n        });\r\n    };\r\n    if (!status) {\r\n      return del(messageid);\r\n    }\r\n    switch (data.rtype) {\r\n      case 0: {\r\n        axios\r\n          .post(\"http://localhost:3005/AddParticipant\", {\r\n            debid: data.debid,\r\n            participant: data.user,\r\n          })\r\n          .then((response) => {\r\n            if (response.data) {\r\n              del(messageid);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            return;\r\n          });\r\n        break;\r\n      }\r\n      case 1:{\r\n        axios.post('http://localhost:3005/AddFriend',{\r\n          user1 : Auth.userInfo[0].name,\r\n          user2 : data.user\r\n        }).then(response=>{\r\n          if(response.data){\r\n            del(messageid);\r\n          }\r\n        }).catch(err=>{\r\n          return;\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const isRenderButton = (type) =>{\r\n    let k = true;\r\n    switch(type)\r\n    {\r\n      case -1: k &= false; break;\r\n      case  2: k &= false; break;\r\n      case  3: k &= false; break;\r\n      default: k &= true; break;\r\n    }\r\n    return k;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const user = Auth.userInfo[0].name;\r\n    if (user === \"user\") {\r\n      return;\r\n    }\r\n    fetch(`http://localhost:3005/Inbox/${user}`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (\r\n          typeof response !== undefined ||\r\n          response !== \"An Error has occured!\"\r\n        ) {\r\n          if (response === \"none\") {\r\n            return updMes({\r\n              message: \"No messages as of yet!\",\r\n              byuser: \"no-one\",\r\n              recievedat: \"none\",\r\n              type: JSON.stringify({ type: \"normal\" }),\r\n            });\r\n          }\r\n          response.map((item) => {\r\n            item.additional = JSON.parse(item.additional);\r\n            return null;\r\n          });\r\n          updMes(response);\r\n          change_this(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        change_this(true);\r\n      });\r\n  }, [Auth.userInfo[0]]);\r\n\r\n  return messages.length > 0 ? (\r\n    <div className=\"Inbox\">\r\n      <div className=\"MessageCatalogue\">\r\n        <h1>Messages</h1>\r\n        <div className=\"MessageList\">\r\n          {messages.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"message\"\r\n                key={index}\r\n                onClick={() => ChangeActiveIndex(index)}\r\n              >\r\n                <h3>\r\n                  {returnMessageTitle(item.additional.rtype)}\r\n                </h3>\r\n                <div className=\"message-sub\">\r\n                  <h4>{`-${item.byuser}(${item.recievedat})`}</h4>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"MessageWindow\">\r\n        <div className=\"Message-display\">\r\n          <h1>{messages[ActiveIndex].additional.title}</h1>\r\n          <div\r\n            className=\"message-frame\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: Htmlify(messages[ActiveIndex].message),\r\n            }}\r\n          ></div>\r\n          <h2>{messages[ActiveIndex].byuser}</h2>\r\n        </div>\r\n        {isRenderButton(messages[ActiveIndex].additional.rtype) ?<div\r\n          className=\"respond\"\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              ExecuteResponse(\r\n                messages[ActiveIndex].additional,\r\n                messages[ActiveIndex].messageid,\r\n                true\r\n              );\r\n            }}\r\n          >\r\n            {messages[ActiveIndex].additional.rtype === 1 ? \"Accept\" : \"Grant\"}\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              ExecuteResponse(\r\n                messages[ActiveIndex].additional,\r\n                messages[ActiveIndex].messageid,\r\n                false\r\n              );\r\n            }}\r\n          >\r\n            Decline\r\n          </button>\r\n        </div>:null}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h1>You've got nothing in your Mail box!</h1>\r\n  );\r\n};\r\n\r\nexport default Inbox;\r\n","D:\\ReactApps\\debatotron\\src\\Components\\OngoingDebs\\OngoingDebs.js",["235"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Deb_header from \"../../Images/debate_hdr.jpg\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"./Debs.css\";\r\nimport { Link } from \"react-scroll\";\r\nimport SettingsIcon from \"../../Assets/settings.svg\";\r\nimport DeleteButton from \"../../Assets/delete.svg\";\r\n\r\nconst OngoingDebs = () => {\r\n  const [disable, toggle_disable] = useState(true);\r\n  const [list, listUpdate] = useState([\r\n    { debid: 123, topic: \"Debates will appear here!\", imglink: \"default\" },\r\n  ]);\r\n  const [PageNumber, ChangeNumber] = useState(1);\r\n  const [Archive, UpdateArchive] = useState([]);\r\n  const [Categories, UpdateCatg] = useState([]);\r\n  const [FilApplied, ToggleFil] = useState(false);\r\n  const [Participants, UpdateParticipants] = useState({});\r\n  const [Likes, UpdateLikes] = useState({});\r\n  const [Settings, ToggleSettings] = useState(false);\r\n  const [DebDisplay, ChangeDisplay] = useState(1);\r\n  const Select = useRef(null);\r\n\r\n  const HandleRequest = (debid) => {\r\n    window.location.href = `/DebPage/${debid}`;\r\n  };\r\n\r\n  const HandlePageChange = (flag) => {\r\n    var count = PageNumber + flag;\r\n    listUpdate(Archive[count - 1]);\r\n    ChangeNumber(count);\r\n  };\r\n\r\n  const HandleResponse = (data) => {\r\n    var tempArr = [],\r\n      AntTemp = [],\r\n      CatTemp = [];\r\n    GetParticipants(data);\r\n    GetLikes(data);\r\n    data.map((item) => {\r\n      tempArr.push(item);\r\n      CatTemp.push(item.category);\r\n      if (tempArr.length >= 10) {\r\n        AntTemp.push(tempArr);\r\n        tempArr = [];\r\n      }\r\n      return null;\r\n    });\r\n    if (data.length % 10 !== 0) {\r\n      AntTemp.push(tempArr);\r\n    }\r\n    UpdateArchive(AntTemp);\r\n    listUpdate(AntTemp[PageNumber - 1]);\r\n    UpdateCatg(CatTemp);\r\n  };\r\n\r\n  const GetParticipants = (data) => {\r\n    var obj = {};\r\n    data.map((item) => {\r\n      fetch(`http://localhost:3005/GetParticipants/${item.debid}`)\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          if (!response) {\r\n            return;\r\n          }\r\n          obj[item.debid] = parseInt(response[0].count);\r\n        })\r\n        .catch((err) => {\r\n          obj[item.debid] = 0;\r\n        });\r\n      return null;\r\n    });\r\n    return UpdateParticipants(obj);\r\n  };\r\n\r\n  const GetLikes = (data) => {\r\n    var obj = {};\r\n    data.map((item) => {\r\n      fetch(`http://localhost:3005/getlikes/${item.debid}`)\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          obj[item.debid] = parseInt(response[0].count);\r\n        })\r\n        .catch((err) => {\r\n          obj[item.debid] = 0;\r\n        });\r\n      return null;\r\n    });\r\n    return UpdateLikes(obj);\r\n  };\r\n\r\n  const FilterAccordingly = () => {\r\n    var Catgry = Select.current.value;\r\n    ToggleFil(true);\r\n    var catg = [];\r\n    Archive.map((item) => {\r\n      item.map((it) => {\r\n        if (it.category === Catgry) {\r\n          catg.push(it);\r\n        }\r\n        return null;\r\n      });\r\n      return null;\r\n    });\r\n    return listUpdate(catg);\r\n  };\r\n\r\n  const ClearFilter = () => {\r\n    var arr = [];\r\n    Archive.map((item) => item.map((it) => arr.push(it)));\r\n    HandleResponse(arr);\r\n    return ToggleFil(!FilApplied);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      toggle_disable(false);\r\n    }, 1000);\r\n    fetch(\r\n      `http://localhost:3005/GetDebs/${DebDisplay === 1 ? \"public\" : \"private\"}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response.length > 0) {\r\n          HandleResponse(response);\r\n        } else {\r\n          listUpdate([\r\n            {\r\n              debid: 123,\r\n              topic: \"Debates will appear here!\",\r\n              imglink: \"default\",\r\n            },\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [DebDisplay]);\r\n\r\n  return (\r\n    <div className=\"debates-page\">\r\n      <img\r\n        className=\"SettingsIcon\"\r\n        src={SettingsIcon}\r\n        alt=\"Settings\"\r\n        onClick={() => ToggleSettings(true)}\r\n      />\r\n      <div\r\n        className=\"settings\"\r\n        style={{\r\n          visibility: Settings ? \"visible\" : \"hidden\",\r\n          pointerEvents: Settings ? \"all\" : \"none\",\r\n          transition: \"0.4s ease\",\r\n        }}\r\n      >\r\n        <img src={DeleteButton} alt=\"X\" onClick={() => ToggleSettings(false)} />\r\n        <h2>Filter your debates!</h2>\r\n        <div>\r\n          <h3>Choose Category:</h3>\r\n          <select ref={Select}>\r\n            {Categories.length > 0 ? (\r\n              Categories.map((item, index) => {\r\n                return (\r\n                  <option key={index} value={item}>\r\n                    {item}\r\n                  </option>\r\n                );\r\n              })\r\n            ) : (\r\n              <option>None</option>\r\n            )}\r\n          </select>\r\n          <button onClick={FilterAccordingly}>Apply</button>\r\n          {FilApplied ? <button onClick={ClearFilter}>Clear</button> : null}\r\n        </div>\r\n      </div>\r\n      <h1\r\n        className=\"main-header\"\r\n        style={{\r\n          pointerEvents: Settings ? \"none\" : \"all\",\r\n          opacity: Settings ? 0.5 : 1,\r\n        }}\r\n      >\r\n        Live Debates\r\n      </h1>\r\n      <div\r\n        className=\"deb-choice\"\r\n        style={{\r\n          pointerEvents: Settings ? \"none\" : \"all\",\r\n          opacity: Settings ? 0.5 : 1,\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            background: DebDisplay === 1 ? \"green\" : \"transparent\",\r\n            color: DebDisplay === 1 ? \"yellow\" : \"black\",\r\n          }}\r\n          onClick={() => ChangeDisplay(1)}\r\n        >\r\n          Public\r\n        </h1>\r\n        <h1\r\n          style={{\r\n            background: DebDisplay === 0 ? \"green\" : \"transparent\",\r\n            color: DebDisplay === 0 ? \"yellow\" : \"black\",\r\n          }}\r\n          onClick={() => ChangeDisplay(0)}\r\n        >\r\n          Restricted\r\n        </h1>\r\n      </div>\r\n      <div\r\n        className=\"DebGrid\"\r\n        style={{\r\n          pointerEvents: disable || Settings ? \"none\" : \"all\",\r\n          opacity: Settings ? 0.5 : 1,\r\n        }}\r\n      >\r\n        {list.length > 0 ? (\r\n          list.map((item) => {\r\n            return (\r\n              <Tilt\r\n                className=\"Tilt\"\r\n                option={{ max: 25 }}\r\n                style={{ height: 400, width: 400 }}\r\n              >\r\n                <div\r\n                  className=\"deb_box\"\r\n                  onClick={() => HandleRequest(item.debid)}\r\n                >\r\n                  <img className=\"deb_hdr\" alt=\"\" src={Deb_header} />\r\n                  <p className=\"debs\">{item.topic}</p>\r\n                  <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <p style={{ marginRight: \"1%\" }}>\r\n                      Participants:{Participants[item.debid]}\r\n                    </p>\r\n                    <p>Likes:{Likes[item.debid]}</p>\r\n                  </div>\r\n                  {/* <div className=\"Overlay\">\r\n                                <h1 className=\"Overlay_item\">{item.topic}</h1>\r\n                            </div> */}\r\n                </div>\r\n              </Tilt>\r\n            );\r\n          })\r\n        ) : (\r\n          <div className=\"no_deb\">\r\n            <h2>No Ongoing Debates at the moment!</h2>\r\n            <p>\r\n              Create one! <a href=\"/new\">Here</a>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {list.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            margin: \"3%\",\r\n            marginLeft: \"50%\",\r\n            marginBlock: \"5%\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Link to=\"main-header\" smooth={true}>\r\n            <button\r\n              disabled={PageNumber !== 1 ? false : true}\r\n              onClick={() => HandlePageChange(-1)}\r\n            >\r\n              Prev\r\n            </button>\r\n          </Link>\r\n          <h1>Page:{PageNumber}</h1>\r\n          <Link to=\"main-header\" smooth={true}>\r\n            <button\r\n              disabled={Archive.length === PageNumber ? true : false}\r\n              onClick={() => HandlePageChange(1)}\r\n            >\r\n              Next\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OngoingDebs;\r\n","D:\\ReactApps\\debatotron\\src\\Components\\profile\\EditProfile.js",["236","237"],"import React,{useState,useEffect,useRef} from 'react';\r\nimport './Profile.css';\r\n\r\nconst EditProfile = ({user,ToggleDisplay}) => {\r\n    const [about,changeAbout]=useState('');\r\n    const [access,changeAccess]=useState('');\r\n    const [image,changeImage]=useState('');\r\n    const Accessmode=useRef(null);\r\n\r\n    const UpdateProfile=()=>{\r\n        fetch(`http://localhost:3005/UpdateProfile`,{\r\n            method:'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n            user:user,\r\n            access:Accessmode.current.value,\r\n            About:about,\r\n            image:image\r\n        })})\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            console.log(response);\r\n            ToggleDisplay(true);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    const HandleInputChange=(event)=>{\r\n        if(!event.target.value.trim()){\r\n            changeAbout(\"\");\r\n            return;\r\n        }\r\n        changeAbout(event.target.value);\r\n    }\r\n\r\n    const HandleImageChange=(evt)=>{\r\n        if(!evt.target.value.trim()){\r\n            return;\r\n        }\r\n        changeImage(evt.target.value);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetch(`http://localhost:3005/profile_Data/${user}`)\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            if(response[0].name)\r\n            {\r\n                changeAbout(response[0].about);\r\n                changeAccess(response[0].access);\r\n            }\r\n            else\r\n            {\r\n                throw 'Failed To Load!';\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            changeAbout('An error has occured!');\r\n            changeAccess('An error has occured!');\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"editPro\">\r\n        <h1 className=\"edt_pro_hdr\">Edit Your Profile!</h1>\r\n        <div className=\"edt_pro_flx\">\r\n        <h2 className=\"edt_pro_img\">Edit Image:</h2>\r\n        <input type=\"text\" className=\"input1\" \r\n        placeholder=\"Enter Link!\"\r\n        onChange={HandleImageChange}\r\n        />\r\n        </div>\r\n        <div className=\"edt_pro_flx_1\">\r\n        <h2>Enter About me Info:</h2>\r\n        <textarea value={about} className=\"input2\" onChange={HandleInputChange}>\r\n        </textarea> \r\n        </div>\r\n        <div className=\"acs\">\r\n        <h2 className=\"edt_pro_sts\">You're Current Choosen Access for your profile is:<span className=\"edt_pro_sts_s\">{access}</span></h2>\r\n        <select ref={Accessmode} className=\"edt_pro_sel\">\r\n            <option value=\"public\" className=\"edt_pro_opt1\">Public</option>\r\n            <option value=\"private\" className=\"edt_pro_opt2\">Private</option>\r\n        </select>\r\n        <button className=\"butn_11\" onClick={UpdateProfile}>Update</button>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditProfile;\r\n",["238","239"],"D:\\ReactApps\\debatotron\\src\\Components\\NewForm\\DebateForm.js",[],"D:\\ReactApps\\debatotron\\src\\Components\\FriendsPage\\FriendsPage.js",["240"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../FriendsPage/FriendsPage.css\";\r\n\r\nconst FriendsPage = ({ userInfo }) => {\r\n  const [Display, ToggleDisplay] = useState(true);\r\n  const [requestMade, ToggleReq] = useState(false);\r\n  const [MainData, UpdateData] = useState(null);\r\n  const [Friends, UpdateFriendsList] = useState([\r\n    { name: \"William\", description: \"I love to Cook\" },\r\n  ]);\r\n  const [NotFound, UpdateNotFoundStatus] = useState({\r\n    status:true,message:\"You don't have any friend!\"\r\n  });\r\n\r\n  const HandleChange = (evt) => {\r\n    const value = evt.target.value.trim();\r\n    if (value === \"\") {\r\n      UpdateFriendsList(MainData);\r\n      UpdateNotFoundStatus(false);\r\n      return;\r\n    }\r\n    var SearchResults = [];\r\n    MainData.map((item) => {\r\n      if (item.name.includes(value)) {\r\n        SearchResults.push(item);\r\n      }\r\n      return null;\r\n    });\r\n    if (SearchResults.length > 0) {\r\n      UpdateFriendsList(SearchResults);\r\n    } else {\r\n      UpdateNotFoundStatus(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log([Friends, userInfo, Display,requestMade]);\r\n    if (userInfo[0].name !== \"user\" && !requestMade) {\r\n      axios\r\n        .get(\r\n          `http://localhost:3005/${\r\n            Display ? \"friends/\" + userInfo[0].name : \"returnAllUsers\"\r\n          }`\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          if(response.data.length === 0){\r\n            UpdateFriendsList([]);\r\n            UpdateData([]);\r\n            UpdateNotFoundStatus({status:true,message:Display?\"You don't have any friend!\":'No user here.'});\r\n            return;\r\n          }\r\n          var array = [];\r\n          response.data.map((item) => {\r\n            if (item.name === userInfo[0].name) {\r\n              return null;\r\n            }\r\n            array.push(item);\r\n            return null;\r\n          });\r\n          UpdateFriendsList(array);\r\n          UpdateData(array);\r\n          ToggleReq(!requestMade);\r\n          UpdateNotFoundStatus({status:false,message:''});\r\n        })\r\n        .catch((err) => {\r\n          return;\r\n        });\r\n    }\r\n  }, [Friends, userInfo, Display]);\r\n\r\n  const ToggleDisp = (ss)=>{\r\n    ToggleDisplay(ss);\r\n    ToggleReq(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"FriendsPage-main\">\r\n      <input\r\n        type=\"search\"\r\n        className=\"search\"\r\n        placeholder=\"Search People...\"\r\n        onChange={HandleChange}\r\n        disabled={Friends.length === 0}\r\n      />\r\n      <div className=\"choice-box\">\r\n        <h2\r\n          style={{\r\n            background: Display ? \"green\" : \"transparent\",\r\n            color: Display ? \"yellow\" : \"black\",\r\n          }}\r\n          onClick={()=>ToggleDisp(1)}\r\n        >\r\n          My Friends\r\n        </h2>\r\n        <h2\r\n          style={{\r\n            background: !Display ? \"green\" : \"transparent\",\r\n            color: !Display ? \"yellow\" : \"black\",\r\n          }}\r\n          onClick={()=>ToggleDisp(0)}\r\n        >\r\n          World\r\n        </h2>\r\n      </div>\r\n      <div className=\"friendWin\">\r\n        {!NotFound.status ? (\r\n          Friends.map((item) => (\r\n            <div className=\"personCard\" style={{background:item.status === false?'cyan':'white'}}>\r\n              <img\r\n                src=\"https://www.searchpng.com/wp-content/uploads/2019/02/Profile-PNG-Icon.png\"\r\n                alt=\"$\"\r\n              />\r\n              <a href={`/Profile/${item.name}`}>{item.name}</a>\r\n              <h2>{item.description}</h2>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h1>{NotFound.message}</h1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsPage;\r\n","D:\\Project\\Debatotron\\src\\index.js",[],["241","242"],"D:\\Project\\Debatotron\\src\\App.js",[],"D:\\Project\\Debatotron\\src\\Contexts\\AuthContext.js",[],"D:\\Project\\Debatotron\\src\\Components\\Menu\\MenuFiles.js",[],"D:\\Project\\Debatotron\\src\\Components\\Menu\\Navigation.js",[],"D:\\Project\\Debatotron\\src\\Components\\Home\\HomePage.js",[],"D:\\Project\\Debatotron\\src\\Components\\ProtectedRoute\\LoginRoute.js",[],"D:\\Project\\Debatotron\\src\\Components\\ProtectedRoute\\ProtectedRoute.js",[],"D:\\Project\\Debatotron\\src\\Components\\SignIn\\SignIn.js",["243"],"import React, { useState } from \"react\";\r\nimport InputBox from \"../Sub_Components/InputBox/InputBox\";\r\nimport signin_Image from \"../../Images/signin.jpg\";\r\nimport \"./SignIn.css\";\r\n\r\nconst SignIn = ({ HandleAuth, Change_Display }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [stat, set] = useState(\"\");\r\n  const HandleName = (e) => {\r\n    if (e.target.value.trim()) {\r\n      setName(e.target.value);\r\n    } else {\r\n      setName(\"\");\r\n    }\r\n  };\r\n  const HandlePassword = (e) => {\r\n    if (e.target.value.trim()) {\r\n      setPassword(e.target.value);\r\n    } else {\r\n      setPassword(\"\");\r\n    }\r\n  };\r\n  const HandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetch(\"http://localhost:3005/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: name,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        var obj = {\r\n          data: response.id,\r\n          state: true,\r\n        };\r\n        HandleAuth(obj);\r\n      })\r\n      .catch((err) => {\r\n        set(\"Something's Wrong!\");\r\n        setInterval(() => {\r\n          set(\"\");\r\n        }, 3000);\r\n      });\r\n    setName(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div className=\"sg-wrapper\">\r\n      <div className=\"signin\">\r\n        <div className=\"sg-mainer\">\r\n          <div>\r\n            <h1>Sign In to your account.</h1>\r\n            <h3>\r\n              New here? <a href=\"/register\">Register.</a>\r\n            </h3>\r\n          </div>\r\n          <form onSubmit={HandleSubmit}>\r\n            <InputBox\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n              onChangeCallback={HandleName}\r\n              value={name}\r\n            />\r\n            <InputBox\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              onChangeCallback={HandlePassword}\r\n              value={password}\r\n            />\r\n            <div className=\"sg-flx\">\r\n                <a href=\"/fp\">Forgot password?</a>\r\n                <button type=\"submit\" className=\"sg-btn\">Sign In</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"sg-img\">\r\n          <img src={signin_Image} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","D:\\Project\\Debatotron\\src\\Components\\Register\\Register.js",["244"],"import React, { useState, useRef } from \"react\";\r\nimport \"./Register.css\";\r\nimport InputBox from \"../Sub_Components/InputBox/InputBox\";\r\nimport register_Image from \"../../Images/register1.jpg\";\r\n\r\nconst Register = ({ HandleAuth, Change_Display }) => {\r\n  const [name, ChangeName] = useState(\"\");\r\n  const [email_1, ChangeEmail] = useState(\"\");\r\n  const [password_1, ChangePassword] = useState(\"\");\r\n  const [answer_1, ChangeAns] = useState(\"\");\r\n  const [state, set] = useState(\"Enter your Credentials!\");\r\n  const recovery_1 = useRef(null);\r\n\r\n  const HandleChange_1 = (event) => {\r\n    if (event.target.value.trim()) {\r\n      ChangeName(event.target.value);\r\n    } else {\r\n      ChangeName(\"\");\r\n    }\r\n  };\r\n  const HandleChange_2 = (event) => {\r\n    if (event.target.value.trim()) {\r\n      ChangeEmail(event.target.value);\r\n    } else {\r\n      ChangeEmail(\"\");\r\n    }\r\n  };\r\n  const HandleChange_3 = (event) => {\r\n    if (event.target.value.trim()) {\r\n      ChangePassword(event.target.value);\r\n    } else {\r\n      ChangePassword(\"\");\r\n    }\r\n  };\r\n  const HandleChange_4 = (event) => {\r\n    if (event.target.value.trim()) {\r\n      ChangeAns(event.target.value);\r\n    } else {\r\n      ChangeAns(\"\");\r\n    }\r\n  };\r\n\r\n  const HandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetch(\"http://localhost:3005/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user: name,\r\n        password: password_1,\r\n        email: email_1,\r\n        recovery: recovery_1.current.value,\r\n        answer: answer_1,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response[0].name) {\r\n          window.location.href = \"/signin\";\r\n        } else {\r\n          throw response;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        set(\"Something's Wrong,Try again!\");\r\n        setTimeout(() => {\r\n          set(\"Enter your Credentials!\");\r\n        }, 3000);\r\n      });\r\n    ChangeAns(\"\");\r\n    ChangeEmail(\"\");\r\n    ChangeName(\"\");\r\n    ChangePassword(\"\");\r\n  };\r\n  return (\r\n    <div className=\"rg-wrapper\">\r\n      <div className=\"register\">\r\n        <div className=\"rg-img\">\r\n          <img src={register_Image} alt=\"\" />\r\n        </div>\r\n        <div className=\"rg-mainer\">\r\n          <div>\r\n            <h1>Register to debatotron.</h1>\r\n            <h3>\r\n              Already have an account? <a href=\"/signin\">Log In.</a>\r\n            </h3>\r\n          </div>\r\n          <form onSubmit={HandleSubmit}>\r\n            <InputBox\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              onChangeCallback={HandleChange_1}\r\n              value={name}\r\n            />\r\n            <InputBox\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n              onChangeCallback={HandleChange_2}\r\n              value={email_1}\r\n            />\r\n            <InputBox\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              onChangeCallback={HandleChange_3}\r\n              value={password_1}\r\n            />\r\n            <div className=\"rg-sel\">\r\n              <select ref={recovery_1}>\r\n                <option>choose your recovery question</option>\r\n                <option value=\"What is you pet's name?\">\r\n                  What is you pet's name?\r\n                </option>\r\n                <option value=\"What is favourite game?\">\r\n                  What is favourite game?\r\n                </option>\r\n                <option value=\"What is your favourite dish?\">\r\n                  What is your favourite dish?\r\n                </option>\r\n                <option value=\"What is your hobby?\">What is your hobby?</option>\r\n              </select>\r\n              <InputBox\r\n                type=\"text\"\r\n                value={answer_1}\r\n                placeholder=\"Your Answer\"\r\n                onChangeCallback={HandleChange_4}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"rg-btn\">\r\n              Create Account\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\Project\\Debatotron\\src\\Components\\FriendsPage\\FriendsPage.js",["245"],"D:\\Project\\Debatotron\\src\\Components\\ForgePassword\\ForgotPass.js",[],"D:\\Project\\Debatotron\\src\\Components\\OngoingDebs\\OngoingDebs.js",["246"],"D:\\Project\\Debatotron\\src\\Components\\NewForm\\DebateForm.js",["247"],"import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport \"./DebForm.css\";\r\n\r\nconst DebateForm = ({ userInfo, ToggleDisplay }) => {\r\n  const [title, Altertitle] = useState(\"\");\r\n  const [description, AlterDesc] = useState(\"\");\r\n  const [catg, change_catg] = useState(0);\r\n  const [access, ChangeAccess] = useState(false);\r\n  const [categories, updateCategories] = useState([\r\n    \"general\",\r\n    \"programming\",\r\n    \"lifestyle\",\r\n    \"nature\",\r\n    \"movies\",\r\n    \"games\",\r\n  ]);\r\n  const [infoBox, updateStatus] = useState(false);\r\n\r\n  const HandleTitle = (evt) => {\r\n    Altertitle(evt.target.value);\r\n  };\r\n\r\n  const HandleDescription = (evt) => {\r\n    AlterDesc(evt.target.value);\r\n  };\r\n\r\n  const SendData = (recieved_flag) => {\r\n    if (!(title && description && recieved_flag)) {\r\n      return;\r\n    }\r\n    if (userInfo.id === -1) {\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"http://localhost:3005/save\", {\r\n        uniqid: uuidv4(),\r\n        title: title.trim(),\r\n        overview: description.trim(),\r\n        publishedat: new Date().toISOString(),\r\n        publisher: userInfo[0].name,\r\n        flag: recieved_flag,\r\n        link: Image.status ? Image.link : Image.text,\r\n        category: categories[catg],\r\n        access: !access ? \"public\" : \"private\",\r\n      })\r\n      .then((response) => {\r\n        window.location.href = `DebPage/${response.data}`;\r\n      })\r\n      .catch((err) => {\r\n        ToggleDisplay({\r\n          text: \"Some Error has occured please try again...\",\r\n          status: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form1\">\r\n      <h1\r\n        style={{\r\n          opacity: infoBox ? 0.5 : 1,\r\n          pointerEvents: infoBox ? \"none\" : \"all\",\r\n        }}\r\n      >\r\n        Start a New Debate!\r\n      </h1>\r\n      <div\r\n        className=\"form1_1\"\r\n        style={{\r\n          opacity: infoBox ? 0.5 : 1,\r\n          pointerEvents: infoBox ? \"none\" : \"all\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"form1_inp\"\r\n          placeholder=\"Topic of your Debate?\"\r\n          value={title}\r\n          onChange={HandleTitle}\r\n        />\r\n        <textarea\r\n          className=\"form1_textarea\"\r\n          placeholder=\"Description of your debate.\"\r\n          value={description}\r\n          onChange={HandleDescription}\r\n        ></textarea>\r\n      </div>\r\n      <div\r\n        className=\"form_popUp\"\r\n        style={{\r\n          transform: infoBox ? \"scale(1)\" : \"scale(0.4)\",\r\n          opacity: infoBox ? 1 : 0,\r\n          pointerEvents: infoBox ? \"all\" : \"none\",\r\n          transition: \"0.6s ease\",\r\n        }}\r\n      >\r\n        <h1>Publish Details</h1>\r\n        <div className=\"access_sup\">\r\n          <h2>Access of your debate:</h2>\r\n          <div className=\"access\">\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                checked={!access}\r\n                onClick={() => ChangeAccess(false)}\r\n              />\r\n              <h2>Public</h2>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                checked={access}\r\n                onClick={() => ChangeAccess(true)}\r\n              />\r\n              <h2>Private</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"frm_catg\">\r\n          <h2>Category of your debate:</h2>\r\n          <div className=\"frm_catg_grd\">\r\n            {categories.map((item, index) => {\r\n              return (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: catg === index ? \"#365efe\" : \"grey\",\r\n                  }}\r\n                  className=\"catg_crd\"\r\n                  key={index}\r\n                  onClick={() => {\r\n                    change_catg(index);\r\n                  }}\r\n                >\r\n                  {item}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"frm_catg_btn\">\r\n            <button\r\n              onClick={() => {\r\n                SendData(\"saved\");\r\n              }}\r\n            >\r\n              Publish Debate\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                updateStatus(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"form1_btns\"\r\n        style={{\r\n          opacity: infoBox ? 0.5 : 1,\r\n          pointerEvents: infoBox ? \"none\" : \"all\",\r\n        }}\r\n      >\r\n        <button\r\n          onClick={() => {\r\n            updateStatus(true);\r\n          }}\r\n        >\r\n          Publish\r\n        </button>\r\n        <button>Save Draft</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DebateForm;\r\n","D:\\Project\\Debatotron\\src\\Components\\NewForm\\DraftForm.js",["248"],"D:\\Project\\Debatotron\\src\\Components\\Inbox\\Inbox.js",["249","250","251","252"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../../Contexts/AuthContext\";\r\nimport Notif_On from \"../../Images/notif_on.svg\";\r\nimport Notif_Off from \"../../Images/notif_off.svg\";\r\nimport Empty from \"../../Images/empty.svg\";\r\nimport Filter from \"../../Images/filter.svg\";\r\nimport Arrow from \"../../Images/left_arrow.svg\";\r\nimport \"./Inbox.css\";\r\n\r\nconst Inbox = ({ userInfo }) => {\r\n  const [messages, updMes] = useState([\r\n    {\r\n      message: \"You're Messages will appear here!\",\r\n      recievedat: \"\",\r\n      additional: { title: \"Message Title\" },\r\n    },\r\n  ]);\r\n  const [NotRecieved, change_this] = useState(true);\r\n  const [toggle, toggler] = useState(false);\r\n  const [ActiveIndex, ChangeActiveIndex] = useState(0);\r\n  const [NotifStatus, ToggleNotif] = useState(false);\r\n  const [OpenedMailsList, UpdateReadList] = useState([0]);\r\n  const Auth = useContext(AuthContext);\r\n  const ref1 = useRef();\r\n  const HandleToggle = () => {\r\n    toggler(!toggle);\r\n  };\r\n\r\n  const Delete_Data = () => {\r\n    HandleToggle();\r\n    fetch(`http://localhost:3005/WipeInbox/${Auth.userInfo[0].name}`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        window.location.href = \"/Inbox\";\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  const Htmlify = (text) => {\r\n    return `<div class=\"display-body\">${text}</div>`;\r\n  };\r\n\r\n  const returnMessageTitle = (type) => {\r\n    switch (type) {\r\n      case -1:\r\n        return \"Welcome, user to the debatotron.\";\r\n      case 0:\r\n        return \"A user needs Access to one of your Debates.\";\r\n      case 1:\r\n        return \"A New Friend Request!\";\r\n      case 2:\r\n        return \"Access Granted!\";\r\n      case 3:\r\n        return \"You've gotta new friend!\";\r\n      case 4:\r\n        return \"Someone Mentioned you in a debate!\";\r\n      case 5:\r\n        return \"A user replied to your comment!\";\r\n      case 6:\r\n        return \"A user liked your comment!\";\r\n      default:\r\n        return \"Test Message\";\r\n    }\r\n  };\r\n\r\n  const ExecuteResponse = (data, messageid, status) => {\r\n    const del = (messageid) => {\r\n      //For deleting any message via its uuid.\r\n      axios\r\n        .post(\"http://localhost:3005/removeMessage\", {\r\n          mId: messageid,\r\n        })\r\n        .then((response) => {\r\n          window.location.reload();\r\n        })\r\n        .catch((err) => {\r\n          return;\r\n        });\r\n    };\r\n    if (!status) {\r\n      return del(messageid);\r\n    }\r\n    switch (data.rtype) {\r\n      case 0: {\r\n        axios\r\n          .post(\"http://localhost:3005/AddParticipant\", {\r\n            debid: data.debid,\r\n            participant: data.user,\r\n          })\r\n          .then((response) => {\r\n            if (response.data) {\r\n              del(messageid);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            return;\r\n          });\r\n        break;\r\n      }\r\n      case 1: {\r\n        axios\r\n          .post(\"http://localhost:3005/AddFriend\", {\r\n            user1: Auth.userInfo[0].name,\r\n            user2: data.user,\r\n          })\r\n          .then((response) => {\r\n            if (response.data) {\r\n              del(messageid);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            return;\r\n          });\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const isRenderButton = (type) => {\r\n    let k = true;\r\n    switch (type) {\r\n      case -1:\r\n        k &= false;\r\n        break;\r\n      case 2:\r\n        k &= false;\r\n        break;\r\n      case 3:\r\n        k &= false;\r\n        break;\r\n      case 4:\r\n        k &= false;\r\n        break;\r\n      case 5:\r\n        k &= false;\r\n        break;\r\n      case 6:\r\n        k &= false;\r\n        break;\r\n      default:\r\n        k = true;\r\n        break;\r\n    }\r\n    return k;\r\n  };\r\n\r\n  const isMailOpened = (index) => {\r\n    return OpenedMailsList.find((item) => item === index);\r\n  };\r\n\r\n  const updateList = (k) => {\r\n    ChangeActiveIndex(Math.max(0, (ActiveIndex + k) % messages.length));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const user = Auth.userInfo[0].name;\r\n    if (user === \"user\") {\r\n      return;\r\n    }\r\n    fetch(`http://localhost:3005/Inbox/${user}`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (\r\n          typeof response !== undefined ||\r\n          response !== \"An Error has occured!\"\r\n        ) {\r\n          if (response === \"none\") {\r\n            return updMes({\r\n              message: \"No messages as of yet!\",\r\n              byuser: \"no-one\",\r\n              recievedat: \"none\",\r\n              type: JSON.stringify({ type: \"normal\" }),\r\n            });\r\n          }\r\n          response.map((item) => {\r\n            item.additional = JSON.parse(item.additional);\r\n            return null;\r\n          });\r\n          updMes(response);\r\n          change_this(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        change_this(true);\r\n      });\r\n  }, [Auth.userInfo[0]]);\r\n\r\n  return (\r\n    <div className=\"inbox\">\r\n      <div className=\"message-window\">\r\n        <div className=\"inbx-header\">\r\n          <div className=\"ibx-hdr1\">\r\n            <h1>Inbox</h1>\r\n            <img\r\n              src={NotifStatus ? Notif_On : Notif_Off}\r\n              onClick={() => {\r\n                ToggleNotif(!NotifStatus);\r\n              }}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"ibx-hdr2\">\r\n            <img src={Filter} alt=\"\" />\r\n            <img src={Empty} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"inbx-message-catalogue\"\r\n          style={{\r\n            height:\r\n              ref1.current !== undefined\r\n                ? ref1.current.offsetHeight / 2 + 150\r\n                : \"485px\",\r\n          }}\r\n        >\r\n          {messages.map((item, index) => (\r\n            <div\r\n              className=\"message-card\"\r\n              key={index}\r\n              onClick={() => {\r\n                ChangeActiveIndex(index);\r\n                var arr = OpenedMailsList;\r\n                arr.push(index);\r\n                UpdateReadList(arr);\r\n              }}\r\n              style={{\r\n                background: isMailOpened(index) ? \"#e2e9fa\" : \"white\",\r\n                transition: \"0.5s\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"bluebar\"\r\n                style={{\r\n                  visibility: ActiveIndex === index ? \"visible\" : \"hidden\",\r\n                }}\r\n              ></div>\r\n              <div>\r\n                <div className=\"mc-1\">\r\n                  <h2>{item.byuser}</h2>\r\n                  <p>{item.recievedat}</p>\r\n                </div>\r\n                <h3 className=\"descp\">\r\n                  {returnMessageTitle(item.additional.rtype)}\r\n                </h3>\r\n                <div className=\"mc-2\">\r\n                  <h3>tags:</h3>\r\n                  <ul>\r\n                    <li>friend-request</li>\r\n                    <li>new-comer</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"display-window\" ref={ref1}>\r\n        <div className=\"display-header\">\r\n          {returnMessageTitle(messages[ActiveIndex].additional.rtype)}\r\n        </div>\r\n        <div className=\"display-sub\">\r\n          <div className=\"display-info\">\r\n            <h1>{messages[ActiveIndex].byuser}</h1>\r\n            <h2>{messages[ActiveIndex].recievedat}</h2>\r\n          </div>\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html: Htmlify(messages[ActiveIndex].message),\r\n            }}\r\n          ></div>\r\n        </div>\r\n        {isRenderButton(messages[ActiveIndex].additional.rtype) ? (\r\n          <div className=\"respond\">\r\n            <button\r\n              onClick={() => {\r\n                ExecuteResponse(\r\n                  messages[ActiveIndex].additional,\r\n                  messages[ActiveIndex].messageid,\r\n                  true\r\n                );\r\n              }}\r\n            >\r\n              {messages[ActiveIndex].additional.rtype === 1\r\n                ? \"Accept\"\r\n                : \"Grant\"}\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                ExecuteResponse(\r\n                  messages[ActiveIndex].additional,\r\n                  messages[ActiveIndex].messageid,\r\n                  false\r\n                );\r\n              }}\r\n            >\r\n              Decline\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"display-btns\">\r\n          <img src={Arrow} onClick={() => updateList(-1)} alt=\"\" />\r\n          <img src={Arrow} onClick={() => updateList(1)} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inbox;\r\n/**\r\n * messages.length > 0 ? (\r\n    <div className=\"Inbox\">\r\n      <div className=\"MessageWindow\">\r\n        <div className=\"Message-display\">\r\n          <h1></h1>\r\n          <h2>{messages[ActiveIndex].byuser}</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h1>You've got nothing in your Mail box!</h1>\r\n  );\r\n */\r\n","D:\\Project\\Debatotron\\src\\Components\\profile\\Profile.js",[],["253","254"],"D:\\Project\\Debatotron\\src\\Components\\profile\\EditProfile.js",["255","256"],"D:\\Project\\Debatotron\\src\\Components\\DebPage\\DebatePage.js",["257","258","259","260","261"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport \"./Debpage.css\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Link } from \"react-scroll\";\r\nimport AuthContext from \"../../Contexts/AuthContext\";\r\nimport Users from \"../../Images/users.svg\";\r\nimport Statement from \"../../Images/script.svg\";\r\nimport Alert from \"../../Images/alert.svg\";\r\nimport Share from \"../../Images/share.svg\";\r\nimport Heart from \"../../Images/heart.svg\";\r\nimport HeartFill from \"../../Images/filled_heart.svg\";\r\nimport Conversation from \"../../Images/conversation.jpg\";\r\nimport Comment from \"../../Images/comment.svg\";\r\nimport JoinDebate from \"./JoinDebate\";\r\nimport DebDescription from \"./DebDescription\";\r\nimport Participants from \"./Participants\";\r\nimport ReportUser from \"./ReportUser\";\r\n\r\nconst DebatePage = (props) => {\r\n  const debateId = props.match.params.id;\r\n  const Main = useContext(AuthContext);\r\n  const [comments, set_comments] = useState([]);\r\n  const [IsReply, toggleIsReply] = useState({\r\n    is: false,\r\n    index: 0,\r\n    user: \"xyz\",\r\n    likes: 0,\r\n    commentId: \"sicnsvc\",\r\n  });\r\n  const [debateInfo, updateDebInfo] = useState({\r\n    topic: \"How to be awesome?\",\r\n    overview: \"Just follow your instincts and be yourself.\",\r\n    publisher: \"xyz\",\r\n    publishedat: new Date().toDateString(),\r\n  });\r\n  const [replyText, set_ReplText] = useState(\"\");\r\n  const [liked, set_likedQs] = useState([]);\r\n  const [fetchStatus, updateStatus] = useState(false);\r\n  const [isParticipant, updateParticipation] = useState(false);\r\n  const [userStatus, updateUserStatus] = useState({});\r\n  const [activeWindow, updateActiveWindow] = useState(null);\r\n  const [participants, updateParticipants] = useState({ true: [], false: [] });\r\n  const [participantsData, updateParticipantData] = useState([\r\n    { userid: -1, username: \"xyz\" },\r\n  ]);\r\n  const [scrollCredentials, updateScrollData] = useState({});\r\n\r\n  const getDateAndTime = (date) => {\r\n    let tdy = new Date();\r\n    let diffdys = tdy - date;\r\n    diffdys = Math.floor(diffdys * 1.15741e-8);\r\n    let d_str =\r\n      diffdys === 0\r\n        ? \" Today\"\r\n        : diffdys === 1\r\n        ? \"Yesterday\"\r\n        : \" \" + date.toDateString();\r\n    d_str = date.toTimeString().slice(0, 5) + d_str;\r\n    return <h2 className=\"card_time\">{d_str}</h2>;\r\n  };\r\n\r\n  const isLiked = (commentId) => {\r\n    let flag = false;\r\n    liked.map((item) => {\r\n      return (flag |= commentId === item);\r\n    });\r\n    return flag;\r\n  };\r\n\r\n  const updateLike = (user, commentId, value, comment, state) => {\r\n    axios\r\n      .post(\"http://localhost:3005/UpdateLike\", {\r\n        debId: debateId,\r\n        user: user,\r\n        userId: Main.userInfo[0].id,\r\n        comment: comment,\r\n        commentId: commentId,\r\n        value: value,\r\n        state: state,\r\n      })\r\n      .then((response) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  const likeComment = (commentid, val = 1) => {\r\n    const recursivelyLikeComment = (comAr, comId) => {\r\n      if (comAr.commentid === comId) {\r\n        comAr.likes += val;\r\n        comAr.likes = Math.max(0, comAr.likes);\r\n        setTimeout(() => {\r\n          updateLike(\r\n            comAr.byuser,\r\n            comAr.commentid,\r\n            comAr.likes,\r\n            comAr.comment,\r\n            val === 1\r\n          );\r\n        }, 2000);\r\n        return comAr;\r\n      }\r\n      comAr.replies = comAr.replies.map((item) => {\r\n        return recursivelyLikeComment(item, comId);\r\n      });\r\n      return comAr;\r\n    };\r\n\r\n    let comm = comments;\r\n    comm = comm.map((item) => {\r\n      return recursivelyLikeComment(item, commentid);\r\n    });\r\n    return set_comments(comm);\r\n  };\r\n\r\n  const isReplied = (id) => {\r\n    let result = comments.find((item) => item.commentid === id);\r\n    if (result === undefined) {\r\n      return <p></p>;\r\n    } else {\r\n      if (result.byuser === Main.userInfo[0].name) {\r\n        return <p>(replied to the previous comment.)</p>;\r\n      }\r\n      return <p>{`(replied to ${result.byuser})`}</p>;\r\n    }\r\n  };\r\n\r\n  const Comments = ({ item, index, level }) => {\r\n    if (typeof item === undefined) {\r\n      return null;\r\n    }\r\n    const image = `https://avatars.dicebear.com/api/micah/${getImageString(\r\n      item.byuser\r\n    )}.svg`;\r\n    let body = (\r\n      <div\r\n        className=\"Dp_comments\"\r\n        style={{\r\n          opacity: activeWindow === null ? 1 : 0.6,\r\n          pointerEvents: activeWindow === null ? \"all\" : \"none\",\r\n        }}\r\n      >\r\n        <div key={index}>\r\n          <div className=\"card\" key={index} style={{ marginLeft: `${level}%` }}>\r\n            <div className=\"card_usrInfo\">\r\n              <div className=\"card_pf\">\r\n                <img src={image} alt=\"\" />\r\n                <h1>{item.byuser || \"User13345\"}</h1>\r\n              </div>\r\n              <p\r\n                style={{\r\n                  width: \"20px\",\r\n                  height: \"20px\",\r\n                  background:\r\n                    debateInfo.publisher === item.byuser\r\n                      ? \"#FFD700\"\r\n                      : userStatus[item.byuser] === true\r\n                      ? \"#405cf5\"\r\n                      : \"#e62e36\",\r\n                  borderRadius: \"100px\",\r\n                }}\r\n              ></p>\r\n            </div>\r\n            <div className=\"card_main\">{item.comment}</div>\r\n            <div className=\"card_main_1\">\r\n              <div style={{ display: \"flex\" }}>\r\n                {getDateAndTime(new Date(item.madeon))}\r\n              </div>\r\n              <div className=\"card_lst\">\r\n                <div\r\n                  className=\"lks\"\r\n                  onClick={() => {\r\n                    if (isLiked(item.commentid)) {\r\n                      let arr = liked;\r\n                      arr.map((item1, index) => {\r\n                        if (item1 === item.commentid) {\r\n                          arr.splice(index, 1);\r\n                        }\r\n                        return null;\r\n                      });\r\n                      likeComment(item.commentid, -1);\r\n                      return;\r\n                    }\r\n                    let arr = liked;\r\n                    arr.push(item.commentid);\r\n                    set_likedQs(arr);\r\n                    likeComment(item.commentid);\r\n                  }}\r\n                >\r\n                  {isLiked(item.commentid) ? (\r\n                    <img src={HeartFill} alt=\"Likes\" className=\"likes1\" />\r\n                  ) : (\r\n                    <img src={Heart} alt=\"Likes\" />\r\n                  )}\r\n                  <p>{item.likes}</p>\r\n                </div>\r\n                <p\r\n                  onClick={() => {\r\n                    toggleIsReply({\r\n                      is: true,\r\n                      index: index,\r\n                      user: item.byuser,\r\n                      commentId: item.commentid,\r\n                    });\r\n                  }}\r\n                >\r\n                  Reply\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {(item.replies || []).map((item1, index1) => {\r\n          return <Comments item={item1} index={index1} level={level + 2} />;\r\n        })}\r\n      </div>\r\n    );\r\n    return body;\r\n  };\r\n\r\n  const getImageString = (str) => {\r\n    try {\r\n      let arr = [];\r\n      for (var i = 0; i < str.length; i++) {\r\n        arr.push(`${str[i]}...${i / 2}`);\r\n      }\r\n      arr.reverse();\r\n      return arr.join(\"\");\r\n    } catch {\r\n      return Math.random().toString();\r\n    }\r\n  };\r\n\r\n  const storeComment = (obj) => {\r\n    axios\r\n      .post(\"http://localhost:3005/makeComment\", {\r\n        comment: obj.comment,\r\n        commentId: obj.commentId,\r\n        user: obj.byuser,\r\n        userId: obj.userId,\r\n        debateId: debateId,\r\n        date: obj.madeon,\r\n        parentId: obj.parent,\r\n      })\r\n      .then((response) => {\r\n        return;\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n\r\n  const findParentComment = (comments_, parent) => {\r\n    //Recursively traverse the comments and find out the parent comment\r\n    // And append the results there...\r\n    if (comments_.commentid === IsReply.commentId) {\r\n      comments_.replies.push({\r\n        byuser: Main.userInfo[0].name,\r\n        likes: 0,\r\n        comment: replyText.trim(),\r\n        commentId: uuidv4(),\r\n        replies: [],\r\n        madeon: new Date().toISOString(),\r\n        userId: Main.userInfo[0].id,\r\n        parent: parent,\r\n      });\r\n      setTimeout(() => {\r\n        let n = comments_.replies.length - 1;\r\n        storeComment(comments_.replies[n]);\r\n      }, 2000);\r\n      return { data: comments_, is: true };\r\n    }\r\n    if (comments_.replies.length === 0) {\r\n      return { data: comments_, is: false };\r\n    }\r\n    let ans;\r\n    for (var i = 0; i < comments_.replies.length; i++) {\r\n      ans = findParentComment(\r\n        comments_.replies[i],\r\n        comments_.replies[i].commentid\r\n      );\r\n      if (ans.is) {\r\n        comments_.replies[i] = ans.data;\r\n        return { data: comments_, is: true };\r\n      }\r\n    }\r\n    return ans;\r\n  };\r\n\r\n  const MakeReply = () => {\r\n    if (replyText.trim() === \"\") {\r\n      return;\r\n    }\r\n    if (IsReply.index === -1) {\r\n      return makeComment();\r\n    }\r\n    let found = { is: false };\r\n    comments.map((item) => {\r\n      if (found.is) {\r\n        return null;\r\n      }\r\n      let comment_ = findParentComment(item, item.commentid);\r\n      if (comment_.is) {\r\n        found = comment_;\r\n      }\r\n      return null;\r\n    });\r\n    if (!found.is) {\r\n      return;\r\n    }\r\n    let res = comments;\r\n    res[IsReply.index] = found.data;\r\n    set_comments(res);\r\n    set_ReplText(\"\");\r\n    return toggleIsReply({\r\n      is: false,\r\n      byuser: \"xyz\",\r\n      commentId: \"mcwinc\",\r\n      index: 0,\r\n    });\r\n  };\r\n\r\n  const makeComment = () => {\r\n    let comm = comments,\r\n      arr;\r\n    arr = {\r\n      comment: replyText.trim(),\r\n      commentId: uuidv4(),\r\n      madeon: new Date().toISOString(),\r\n      likes: 0,\r\n      byuser: Main.userInfo[0].name,\r\n      replies: [],\r\n      userId: Main.userInfo[0].id,\r\n      parent: \"none\",\r\n    };\r\n    comm.push(arr);\r\n    set_comments(comm);\r\n    set_ReplText(\"\");\r\n    toggleIsReply({\r\n      is: false,\r\n      user: \"xyz\",\r\n      commentId: \"mcwinc\",\r\n      index: 0,\r\n    });\r\n    return storeComment(arr);\r\n  };\r\n\r\n  const hashUserStatus = (data) => {\r\n    let user = {},\r\n      partp = {};\r\n    updateParticipantData(data);\r\n    data.map((item) => {\r\n      try {\r\n        partp[item.withdeb].push(item.username);\r\n      } catch {\r\n        partp[item.withdeb] = [item.username];\r\n      }\r\n      return (user[item.username] = item.withdeb);\r\n    });\r\n    updateParticipants(partp);\r\n    return updateUserStatus(user);\r\n  };\r\n\r\n  const refreshComments = () => {\r\n    setTimeout(() => {\r\n      axios\r\n        .get(`http://localhost:3005/getComments/${debateId}`)\r\n        .then((response) => {\r\n          set_comments(response.data);\r\n          refreshComments();\r\n        });\r\n    }, 5 * 60 * 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!fetchStatus && Main.userInfo[0].id !== -1) {\r\n      axios\r\n        .get(`http://localhost:3005/getdebdata/${debateId}`)\r\n        .then((response) => {\r\n          updateDebInfo(response.data[0]);\r\n          axios\r\n            .get(`http://localhost:3005/getParticipation/${debateId}`)\r\n            .then((response) => {\r\n              response.data.map((item) => {\r\n                if (item.username === Main.userInfo[0].name) {\r\n                  updateParticipation(true);\r\n                }\r\n                return null;\r\n              });\r\n              hashUserStatus(response.data);\r\n              axios\r\n                .get(`http://localhost:3005/getComments/${debateId}`)\r\n                .then((response) => {\r\n                  set_comments(response.data);\r\n                  refreshComments();\r\n                  updateStatus(true);\r\n                  axios\r\n                    .get(\r\n                      `http://localhost:3005/getLikes/${debateId}/${Main.userInfo[0].id}`\r\n                    )\r\n                    .then((response) => {\r\n                      let s = response.data.map((item) => item.commentid);\r\n                      set_likedQs(s);\r\n                    })\r\n                    .catch((err) => {\r\n                      throw err;\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                  throw err;\r\n                });\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          updateParticipation(null);\r\n        });\r\n    }\r\n  }, [comments, IsReply, liked, Main]);\r\n\r\n  return isParticipant === false ? (\r\n    <JoinDebate\r\n      title={debateInfo.topic}\r\n      description={debateInfo.overview}\r\n      name={debateInfo.publisher}\r\n      publishedAt={\r\n        new Date(debateInfo.publishedat).toTimeString().slice(0, 5) +\r\n        \" | \" +\r\n        new Date(debateInfo.publishedat).toLocaleDateString()\r\n      }\r\n      debateId={debateId}\r\n      userInfo={Main.userInfo[0]}\r\n      updateParticipation={(v) => updateParticipation(v)}\r\n    />\r\n  ) : (\r\n    <div className=\"DebPage\">\r\n      <div\r\n        className=\"Dp_catlg\"\r\n        style={{\r\n          opacity: activeWindow === null ? 1 : 0.6,\r\n          pointerEvents: activeWindow === null ? \"all\" : \"none\",\r\n        }}\r\n      >\r\n        <div className=\"Dp_ctg_stm\">\r\n          <img\r\n            src={Statement}\r\n            alt=\"statement\"\r\n            onClick={() => {\r\n              updateActiveWindow(1);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"Dp_ctg_usr\">\r\n          <img\r\n            src={Users}\r\n            alt=\"Participants\"\r\n            onClick={() => {\r\n              updateActiveWindow(2);\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"Dp_ctg_alt\"\r\n          onClick={() => {\r\n            updateActiveWindow(3);\r\n          }}\r\n        >\r\n          <img src={Alert} alt=\"Report\" />\r\n        </div>\r\n        <div className=\"Dp_ctg_arw\">\r\n          {/* TODO: Make an invite user pop-up */}\r\n          <img\r\n            src={Share}\r\n            alt=\"Homepage\"\r\n            onClick={() => {\r\n              navigator.clipboard\r\n                .writeText(`http://localhost:3000/DebPage/${debateId}`)\r\n                .then((response) => {});\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {activeWindow !== null ? (\r\n        activeWindow === 1 ? (\r\n          <DebDescription\r\n            title={debateInfo.topic}\r\n            description={debateInfo.overview}\r\n            toggleBox={() => updateActiveWindow(null)}\r\n          />\r\n        ) : activeWindow === 2 ? (\r\n          <Participants\r\n            owner={debateInfo.publisher === Main.userInfo[0].name}\r\n            status={userStatus[Main.userInfo[0].name]}\r\n            participants={participants}\r\n            debateId={debateId}\r\n            name={Main.userInfo[0].name}\r\n            userId={Main.userInfo[0].id}\r\n            toggleBox={() => updateActiveWindow(null)}\r\n          />\r\n        ) : activeWindow === 3 ? (\r\n          <ReportUser\r\n            debateId={debateId}\r\n            owner={debateInfo.publisher}\r\n            userList={participantsData}\r\n            user={Main.userInfo[0]}\r\n            toggleBox={() => updateActiveWindow(null)}\r\n          />\r\n        ) : null\r\n      ) : null}\r\n      {comments.length !== 0 ? (\r\n        comments.map((item, index) => {\r\n          return <Comments item={item} index={index} level={3} />;\r\n        })\r\n      ) : (\r\n        <div\r\n          className=\"emp_conv\"\r\n          style={{\r\n            opacity: activeWindow === null ? 1 : 0.6,\r\n            pointerEvents: activeWindow === null ? \"all\" : \"none\",\r\n          }}\r\n        >\r\n          <img src={Conversation} alt=\"\" />\r\n          <h2>\r\n            Be the first to start the{\" \"}\r\n            <span\r\n              onClick={() => {\r\n                toggleIsReply({\r\n                  is: true,\r\n                  index: -1,\r\n                });\r\n              }}\r\n            >\r\n              conversation\r\n            </span>\r\n            .\r\n          </h2>\r\n        </div>\r\n      )}\r\n      <div\r\n        className=\"Dp_textBx\"\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"35%\",\r\n          left: IsReply.is === true ? \"40%\" : \"110%\",\r\n        }}\r\n      >\r\n        <textarea\r\n          placeholder={`${\r\n            IsReply.index === -1\r\n              ? \"Make a new comment\"\r\n              : `Reply to ${IsReply.user}`\r\n          }`}\r\n          value={replyText}\r\n          onChange={(e) => {\r\n            set_ReplText(e.target.value);\r\n          }}\r\n        ></textarea>\r\n        <div className=\"repl_btns\">\r\n          <button onClick={MakeReply}>Reply</button>\r\n          <button\r\n            onClick={() =>\r\n              toggleIsReply({\r\n                is: false,\r\n                index: 0,\r\n                user: \"XYZ\",\r\n                likes: 0,\r\n                commentId: \"sicms\",\r\n              })\r\n            }\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"comment\"\r\n        style={{\r\n          opacity: IsReply.is === true ? 0 : 1,\r\n          pointerEvents: IsReply.is === true ? \"none\" : \"all\",\r\n        }}\r\n      >\r\n        <img\r\n          src={Comment}\r\n          alt=\"Comment\"\r\n          onClick={() => {\r\n            console.log(scrollCredentials);\r\n            toggleIsReply({\r\n              is: true,\r\n              index: -1,\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DebatePage;\r\n","D:\\Project\\Debatotron\\src\\Components\\Profile\\Profile.js",[],"D:\\Project\\Debatotron\\src\\Components\\DebPage\\Participants.js",[],"D:\\Project\\Debatotron\\src\\Components\\DebPage\\ReportUser.js",[],"D:\\Project\\Debatotron\\src\\Components\\DebPage\\DebDescription.js",[],"D:\\Project\\Debatotron\\src\\Components\\Profile\\EditProfile.js",["262","263"],"D:\\Project\\Debatotron\\src\\Components\\Sub_Components\\InputBox\\InputBox.js",[],"D:\\Project\\Debatotron\\src\\Components\\DebPage\\JoinDebate.js",["264"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst JoinDebate = ({\r\n  title,\r\n  description,\r\n  name,\r\n  publishedAt,\r\n  debateId,\r\n  userInfo,\r\n  updateParticipation,\r\n}) => {\r\n  const UpdateParticipation = (val) => {\r\n    axios\r\n      .post(\"http://localhost:3005/updateParticipation\", {\r\n        debId: debateId,\r\n        user: userInfo.name,\r\n        userId: userInfo.id,\r\n        status: val,\r\n      })\r\n      .then((response) => {\r\n        updateParticipation(true);\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (name === userInfo.name) {\r\n      updateParticipation(true);\r\n    }\r\n  }, [name, userInfo]);\r\n\r\n  const image = `https://avatars.dicebear.com/api/micah/${Math.random()}.svg`;\r\n\r\n  return (\r\n    <div className=\"JoinDeb\">\r\n      <div className=\"J_deb_inf\">\r\n        <div>\r\n          <img src={image} alt=\"\" />\r\n          <h2>{name || \"xyz\"}</h2>\r\n        </div>\r\n        <h2>{publishedAt || \"today\"}</h2>\r\n      </div>\r\n      <div className=\"J_deb_1\">\r\n        <div>\r\n          <h1>{title || \"How to be awesome?\"}</h1>\r\n          <h2>\r\n            {description || \"Just follow your instincts and be yourself.\"}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"J_deb_2\">\r\n        <button onClick={() => UpdateParticipation(true)}>I'm with it</button>\r\n        <button onClick={() => UpdateParticipation(false)}>\r\n          I'm against it\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinDebate;\r\n","D:\\Project\\Debatotron\\src\\Components\\Home\\UserFeed.js",[],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":1,"column":24,"nodeType":"271","messageId":"272","endLine":1,"endColumn":33},{"ruleId":"269","severity":1,"message":"273","line":8,"column":12,"nodeType":"271","messageId":"272","endLine":8,"endColumn":16},{"ruleId":"269","severity":1,"message":"274","line":8,"column":17,"nodeType":"271","messageId":"272","endLine":8,"endColumn":28},{"ruleId":"269","severity":1,"message":"275","line":13,"column":24,"nodeType":"271","messageId":"272","endLine":13,"endColumn":26},{"ruleId":"269","severity":1,"message":"276","line":2,"column":9,"nodeType":"271","messageId":"272","endLine":2,"endColumn":17},{"ruleId":"277","severity":1,"message":"278","line":52,"column":17,"nodeType":"279","messageId":"280","endLine":52,"endColumn":32},{"ruleId":"277","severity":1,"message":"278","line":91,"column":15,"nodeType":"279","messageId":"280","endLine":91,"endColumn":27},{"ruleId":"269","severity":1,"message":"281","line":1,"column":34,"nodeType":"271","messageId":"272","endLine":1,"endColumn":40},{"ruleId":"269","severity":1,"message":"276","line":2,"column":9,"nodeType":"271","messageId":"272","endLine":2,"endColumn":17},{"ruleId":"269","severity":1,"message":"282","line":7,"column":8,"nodeType":"271","messageId":"272","endLine":7,"endColumn":16},{"ruleId":"283","severity":1,"message":"284","line":27,"column":64,"nodeType":"285","endLine":27,"endColumn":177},{"ruleId":"286","severity":1,"message":"287","line":22,"column":7,"nodeType":"288","endLine":22,"endColumn":9,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":95,"column":24,"nodeType":"292","messageId":"293","endLine":95,"endColumn":26},{"ruleId":"290","severity":1,"message":"291","line":117,"column":22,"nodeType":"292","messageId":"293","endLine":117,"endColumn":24},{"ruleId":"290","severity":1,"message":"291","line":128,"column":28,"nodeType":"292","messageId":"293","endLine":128,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":131,"column":21,"nodeType":"279","messageId":"280","endLine":131,"endColumn":36},{"ruleId":"290","severity":1,"message":"291","line":149,"column":17,"nodeType":"292","messageId":"293","endLine":149,"endColumn":19},{"ruleId":"290","severity":1,"message":"291","line":161,"column":12,"nodeType":"292","messageId":"293","endLine":161,"endColumn":14},{"ruleId":"269","severity":1,"message":"294","line":14,"column":10,"nodeType":"271","messageId":"272","endLine":14,"endColumn":21},{"ruleId":"269","severity":1,"message":"295","line":22,"column":9,"nodeType":"271","messageId":"272","endLine":22,"endColumn":20},{"ruleId":"286","severity":1,"message":"296","line":149,"column":6,"nodeType":"288","endLine":149,"endColumn":24,"suggestions":"297"},{"ruleId":"286","severity":1,"message":"298","line":149,"column":7,"nodeType":"299","endLine":149,"endColumn":23},{"ruleId":"286","severity":1,"message":"300","line":139,"column":6,"nodeType":"288","endLine":139,"endColumn":18,"suggestions":"301"},{"ruleId":"277","severity":1,"message":"278","line":55,"column":17,"nodeType":"279","messageId":"280","endLine":55,"endColumn":41},{"ruleId":"286","severity":1,"message":"302","line":62,"column":7,"nodeType":"288","endLine":62,"endColumn":9,"suggestions":"303"},{"ruleId":"265","replacedBy":"304"},{"ruleId":"267","replacedBy":"305"},{"ruleId":"286","severity":1,"message":"306","line":71,"column":6,"nodeType":"288","endLine":71,"endColumn":34,"suggestions":"307"},{"ruleId":"265","replacedBy":"308"},{"ruleId":"267","replacedBy":"309"},{"ruleId":"269","severity":1,"message":"310","line":9,"column":10,"nodeType":"271","messageId":"272","endLine":9,"endColumn":14},{"ruleId":"269","severity":1,"message":"311","line":11,"column":10,"nodeType":"271","messageId":"272","endLine":11,"endColumn":15},{"ruleId":"286","severity":1,"message":"306","line":71,"column":6,"nodeType":"288","endLine":71,"endColumn":34,"suggestions":"312"},{"ruleId":"269","severity":1,"message":"313","line":10,"column":10,"nodeType":"271","messageId":"272","endLine":10,"endColumn":17},{"ruleId":"269","severity":1,"message":"314","line":11,"column":22,"nodeType":"271","messageId":"272","endLine":11,"endColumn":38},{"ruleId":"286","severity":1,"message":"287","line":22,"column":7,"nodeType":"288","endLine":22,"endColumn":9,"suggestions":"315"},{"ruleId":"269","severity":1,"message":"294","line":19,"column":10,"nodeType":"271","messageId":"272","endLine":19,"endColumn":21},{"ruleId":"269","severity":1,"message":"295","line":30,"column":9,"nodeType":"271","messageId":"272","endLine":30,"endColumn":20},{"ruleId":"286","severity":1,"message":"296","line":191,"column":6,"nodeType":"288","endLine":191,"endColumn":24,"suggestions":"316"},{"ruleId":"286","severity":1,"message":"298","line":191,"column":7,"nodeType":"299","endLine":191,"endColumn":23},{"ruleId":"265","replacedBy":"317"},{"ruleId":"267","replacedBy":"318"},{"ruleId":"277","severity":1,"message":"278","line":55,"column":17,"nodeType":"279","messageId":"280","endLine":55,"endColumn":41},{"ruleId":"286","severity":1,"message":"302","line":62,"column":7,"nodeType":"288","endLine":62,"endColumn":9,"suggestions":"319"},{"ruleId":"269","severity":1,"message":"281","line":1,"column":50,"nodeType":"271","messageId":"272","endLine":1,"endColumn":56},{"ruleId":"269","severity":1,"message":"320","line":5,"column":10,"nodeType":"271","messageId":"272","endLine":5,"endColumn":14},{"ruleId":"269","severity":1,"message":"321","line":47,"column":29,"nodeType":"271","messageId":"272","endLine":47,"endColumn":45},{"ruleId":"269","severity":1,"message":"322","line":116,"column":9,"nodeType":"271","messageId":"272","endLine":116,"endColumn":18},{"ruleId":"286","severity":1,"message":"323","line":416,"column":6,"nodeType":"288","endLine":416,"endColumn":38,"suggestions":"324"},{"ruleId":"277","severity":1,"message":"278","line":55,"column":17,"nodeType":"279","messageId":"280","endLine":55,"endColumn":41},{"ruleId":"286","severity":1,"message":"302","line":62,"column":7,"nodeType":"288","endLine":62,"endColumn":9,"suggestions":"325"},{"ruleId":"286","severity":1,"message":"326","line":33,"column":6,"nodeType":"288","endLine":33,"endColumn":22,"suggestions":"327"},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'change_user' is assigned a value but never used.","'x5' is assigned a value but never used.","'Redirect' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'useRef' is defined but never used.","'Register' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["330"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NotRecieved' is assigned a value but never used.","'Delete_Data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Auth.userInfo'. Either include it or remove the dependency array.",["331"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has a missing dependency: 'HandleResponse'. Either include it or remove the dependency array.",["332"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["333"],["328"],["329"],"React Hook useEffect has a missing dependency: 'requestMade'. Either include it or remove the dependency array. You can also do a functional update 'ToggleReq(r => ...)' if you only need 'requestMade' in the 'ToggleReq' call.",["334"],["328"],["329"],"'stat' is assigned a value but never used.","'state' is assigned a value but never used.",["335"],"'Debates' is assigned a value but never used.","'updateCategories' is assigned a value but never used.",["336"],["337"],["328"],["329"],["338"],"'Link' is defined but never used.","'updateScrollData' is assigned a value but never used.","'isReplied' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'debateId', 'fetchStatus', and 'refreshComments'. Either include them or remove the dependency array.",["339"],["340"],"React Hook useEffect has a missing dependency: 'updateParticipation'. Either include it or remove the dependency array. If 'updateParticipation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["341"],"no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"350","fix":"352"},{"desc":"342","fix":"353"},{"desc":"344","fix":"354"},{"desc":"348","fix":"355"},{"desc":"356","fix":"357"},{"desc":"348","fix":"358"},{"desc":"359","fix":"360"},"Update the dependencies array to be: [id]",{"range":"361","text":"362"},"Update the dependencies array to be: [Auth.userInfo]",{"range":"363","text":"364"},"Update the dependencies array to be: [DebDisplay, HandleResponse]",{"range":"365","text":"366"},"Update the dependencies array to be: [user]",{"range":"367","text":"368"},"Update the dependencies array to be: [Friends, userInfo, Display, requestMade]",{"range":"369","text":"370"},{"range":"371","text":"370"},{"range":"372","text":"362"},{"range":"373","text":"364"},{"range":"374","text":"368"},"Update the dependencies array to be: [comments, IsReply, liked, Main, fetchStatus, debateId, refreshComments]",{"range":"375","text":"376"},{"range":"377","text":"368"},"Update the dependencies array to be: [name, updateParticipation, userInfo]",{"range":"378","text":"379"},[662,664],"[id]",[3873,3891],"[Auth.userInfo]",[3852,3864],"[DebDisplay, HandleResponse]",[1786,1788],"[user]",[2163,2191],"[Friends, userInfo, Display, requestMade]",[2163,2191],[662,664],[4998,5016],[1786,1788],[12572,12604],"[comments, IsReply, liked, Main, fetchStatus, debateId, refreshComments]",[1786,1788],[675,691],"[name, updateParticipation, userInfo]"]